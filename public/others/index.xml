<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Others on Xiao Song </title>
    <link>/others/</link>
    <description>Recent content in Others on Xiao Song </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/others/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>初中生学习成绩的影响因素——基于分类与回归树的方法</title>
      <link>/others/edutree/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/others/edutree/</guid>
      <description>数据本文采用中国教育追踪调查 (China Education Panel Survey, CEPS)2013-2014学年基线数据。 采用PPS抽样方法，以人口平均受教育水平和人口比例为分层变量并通过两阶段分层抽样从从全国随机抽取了28个县级单位作为调查点。具体而言，CEPS在每个入样县（区）所辖地理范围内分别抽取4所初中学校。并在每所入样学校中分别抽取4个班级，包括2个七年级班和2个九年级班。
模型与算法CART算法全称为分类与回归树（Classification and Regression Trees）。它可以处理分类与回归算法，以及生存分析因变量。作为一种非参数的机器学习方法，CART决策树无需对数据的分布做任何假定。CART算法划分数据的依据是变量的取值顺序，因此它对异常值不敏感。最后，通过交叉验证（Cross Validation）的方法求得预测误差。 回归树模型可表示为： \[f(x) = \sum\limits_{m = 1}^M {{c_m}I(x \in {R_m})} \]
其中，\(x\)是一系列输入特征（自变量），\({R_1},{R_2},...,{R_m}\)是输入空间被划分的M个区域。 是区域\({R_m}\)对应的最优值。\(I\)代表的是指示函数（indicator function），当输入变量\(x\)属于区域 \({R_m}\)时，输出为1，否则输出为0。 CART算法选择基尼系数进行属性划分。CART算法可以运用于分类和回归问题中。
&amp;gt; setwd(&amp;quot;E:/edu/data2&amp;quot;)&amp;gt; library(haven)&amp;gt; library(tidyverse)&amp;gt; ceps &amp;lt;- read_dta(&amp;quot;E:/edu/data2/ceps.dta&amp;quot;)&amp;gt; ceps &amp;lt;- lapply(ceps, unclass)&amp;gt; ceps &amp;lt;- data.frame(ceps)&amp;gt; &amp;gt; ceps$schids &amp;lt;- as.factor(ceps$schids)&amp;gt; library(rpart)&amp;gt; library(rpart.plot)&amp;gt; library(lattice)&amp;gt; require(stats)&amp;gt; attach(ceps)&amp;gt; histogram(sdtotal,equal.widths = TRUE, nint = 70)&amp;gt; cont &amp;lt;- rpart.</description>
    </item>
    
    <item>
      <title>Xiao Song</title>
      <link>/others/englishresume/</link>
      <pubDate>Tue, 07 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/others/englishresume/</guid>
      <description>Chinese Resume please click here
CONTACTAdress：Room 201 North Fashang Building, Dongchuan Road 500, ShanghaiEmail：xsong@stu.ecnu.edu.cnGithub：https://github.com/ECSTA7YWebsite：https://hsiaosong.netlify.com/Wechat Official Account：ApocalypseNowSOFTWARE SKILLSR LaTeX StataPython SQL SPSSRelevant CoursesRegression Analysis and Stata Application、SPSS Application、Categorical Data Analysis、Social Simulation and NetLogo ApplicationR data Analysis、Algorithm and program design (Python)EDUCATIONEast China Normal University Bachelor of Sociology (GPA：3.64/4 | Top10%) 2016/09-Today</description>
    </item>
    
    <item>
      <title>如何提取R包中的小品文</title>
      <link>/others/vignette/</link>
      <pubDate>Tue, 07 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/others/vignette/</guid>
      <description>用R实现各种分析任务需要学习不同的R包。而学习R包实现方法的同时必须同时结合理论。因此仅仅看帮助文档和用户手册（Reference manual）是远远不够的。作为学习R包的重要资源，小品文（Vignettes，或翻译为简介）将统计理论、代码与示例相结合，是学习数据分析的不可多得的好材料。下文将以rpart包为例讲解如何获取R包的官方小品文。
在CRAN上发布的R包往往会有一个官方主页。在搜索引擎中键入R rpart或CRAN rpart便能够找到此包主页。
rpart的官方主页如下所示：
其中，Downloads下便有用户手册和小品文的下载按钮，点击即可下载。
但，这种方法其实是多此一举了！
因为我们在下载R包时，已经将小品文下载下来了。我们可以使用utils包中的vignette函数自动提取小品文。但首先我们需要提取R包的小品文名称，代码如下：
&amp;gt; #install.packages(&amp;#39;utils&amp;#39;)#没安装先安装包&amp;gt; #library(utils)#加载包&amp;gt; vignette(, package = &amp;quot;rpart&amp;quot;)#提取rpart包的小品文名称输出结果如下所示：
&amp;gt; #Vignettes in package ‘rpart’:&amp;gt; &amp;gt; #longintro Introduction to Rpart &amp;gt; # (source, pdf)&amp;gt; #usercode User Written Split&amp;gt; # Functions (source, pdf)可以发现，rpart包有两篇小品文，《Introduction to Rpart》和《User Written Split Functions》。分别简称为“longintro”和“usercode”。现在，就可以根据简称提取小品文了，输入：
&amp;gt; vignette(&amp;quot;longintro&amp;quot;, package = &amp;quot;rpart&amp;quot;)第一篇《Introduction to Rpart》的pdf便会自动跳出：
便可以阅读了。
很多R包的小品文是pdf版本，当然还有很多是html版的，如ggplot2的小品文：
&amp;gt; vignette(&amp;quot;ggplot2-specs&amp;quot;, package = &amp;quot;ggplot2&amp;quot;)看起来这个小品文是用R Markdown写的。</description>
    </item>
    
    <item>
      <title>宋骁的博客</title>
      <link>/others/blog/</link>
      <pubDate>Tue, 07 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/others/blog/</guid>
      <description>在我看来，“博客”这个词都快被淘汰了。以及台湾地区好像称之为不伦不类的“部落格”</description>
    </item>
    
    <item>
      <title>Python函数与模块的使用</title>
      <link>/others/pydef/</link>
      <pubDate>Sun, 08 May 2016 00:00:00 +0000</pubDate>
      
      <guid>/others/pydef/</guid>
      <description>函数与模块的使用 实验范例6.7.2 #(1) def star(m,n): for i in range(m): print(&#39;*&#39;*n) star(3,2)  ** ** **  star(5,6)  ****** ****** ****** ****** ******  star(4,20)  ******************** ******************** ******************** ********************  #(2) def paint(m,s): print(s*m) paint(3,&#39;*&#39;)  ***  paint(8,&#39;%+&#39;)  %+%+%+%+%+%+%+%+  #(3) def check(a): if a&amp;gt;0: print(&#39;&amp;gt;0&#39;) elif a &amp;lt; 0: print(&#39;&amp;lt;0&#39;) else: print(&amp;quot;==0&amp;quot;) check(5)  &amp;gt;0  check(-2)  &amp;lt;0  check(0)  ==0  #(4) def avg(a,b): return(a+b)/2 c = avg(4,6) c  5.</description>
    </item>
    
  </channel>
</rss>