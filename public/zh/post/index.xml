<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Xiao Song</title>
    <link>/zh/post/</link>
    <description>Recent content in Posts on Xiao Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 01 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/zh/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>R模型可视化</title>
      <link>/zh/model/</link>
      <pubDate>Tue, 01 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/zh/model/</guid>
      <description>PDF版本下载
English Version
模型可视化是应用统计学的重要内容。任何模型都离不开结果的可视化。所谓模型，不过是将一堆散点简化为一条线。结果的可视化需要预测值。Hadley Wickham的modelr包提供用于预测的函数。预测的结果可以直接被ggplot2使用并画图。modelr支持管道操作，是将数据分析流程化的利器。
modelr包的主要函数有：
data_grid: 生成预测数据
add_predictions: 加入预测值
crossv_kfold、crossv_mc、crossv_loo: 交叉验证
library(dplyr)library(tidyr)library(ggplot2)library(modelr)library(haven)library(cowplot)library(stargazer)`%&amp;gt;%` &amp;lt;- magrittr::`%&amp;gt;%`基础回归hatdt为作者个人整理的中国家庭追踪调查(CFPS)收入数据1。
hatdt &amp;lt;- hatdt %&amp;gt;% filter(type==&amp;#39;个人收入（元）&amp;#39;) %&amp;gt;% drop_na(agem,inc,fswt_nat)set.seed(20191001)sample &amp;lt;- sample(1:nrow(hatdt),600,replace = F)sampled &amp;lt;- hatdt[sample,]plota &amp;lt;- ggplot(hatdt,aes(agem,inc,weight=fswt_nat)) +geom_jitter(data=sampled,height=550,width=5,size =1.5,alpha=1/3) +geom_smooth(span =10,size=1) + geom_smooth(method=&amp;#39;lm&amp;#39;,size=1,color=&amp;#39;red&amp;#39;) +ylim(0, 20000) +labs(x = &amp;quot;年龄&amp;quot;,y = &amp;quot;人民币(元）&amp;quot;) +theme_bw()plotb &amp;lt;- ggplot() +geom_jitter(data=sampled,aes(agem,inc),height=550,width=5,size =1.</description>
    </item>
    
    <item>
      <title>实用学习资源链接(持续更新)</title>
      <link>/zh/resource/</link>
      <pubDate>Mon, 23 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/zh/resource/</guid>
      <description>RR for Data Science
ggplot2: Elegant Graphics for Data Analysis
Advanced R
现代统计图形
现代统计图形之极乐净土
Introduction to Econometrics with R
Text Mining with R:A Tidy Approach
caret
Glmnet Vignette
统计学与R读书笔记(第六版)
PythonPython帮助系统
Python机器学习
Python -WordCloud 修改色调
Python中WordCloud各参数的含义
超详细：Python(wordcloud+jieba)生成中文词云图
杂七杂八的链接Tidyverse vs. Non-Tidyverse: To be or Not To be擂台赛
R语言忍者秘笈
datasets（R自带数据包）
一个商业爬虫网站：数说聚合
词云网站：
1
2
3
Fundamentals of Data Visualization
图床：https://sm.ms/
机器学习XGBoost Documentation
Random Forests 商业版本</description>
    </item>
    
    <item>
      <title>Python有用的函数</title>
      <link>/zh/pybasic/</link>
      <pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/zh/pybasic/</guid>
      <description>一本Python书
Python数据分析小抄
从文件中读取数据文件类提供了三种方法读取文本文件的内容，分别是：
f.read(size)返回一个字符串，内容为长度为size的文本。参数size表示读取的数扯，可以省略。如果省略size参数，则表示读取文件所有内容，作为一个字符串返回。
f.readline()返回一个字符串，内容为文件当前一行的文本。
f.readlines()返回一个列表，列表的数据项为一行的文本[linel, line2, ···,lineN] 。再通过循环操作可以逐行访问列表中每一行的内容。
mode解释r以只读方式打开w以写方式打开一个文件，当这个文件存在时，覆盖原来的内容。当这个文件不存在时，创建这个文件x创建一个新文件，以写方式打开，当文件已存在， 报错FileExistsErrora以写方式打开，写人内容追加在文件的末尾b表示二进制文件，添加在其他控制字符后t表示文本文件，默认值+以修改方式打开，支持读写设置工作目录获取当前工作目录：import osos.</description>
    </item>
    
    <item>
      <title>徐导发片了</title>
      <link>/zh/xudao/</link>
      <pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/zh/xudao/</guid>
      <description>徐正阳是我的小学和初中同学。初中毕业后，我们都没留在原本的学校。我去了一所擅长虐待学生的高中，他则去了另一所高中。没想到这小子又参加艺考最终高中北京电影学院了！
在故宫和Tom Cruise、Steven Spielberg谈笑风生之后 ，他在大二后自愿成为丘八。临走时填写的入伍志愿地点的是“边远艰苦地区”。在几次失意的网恋，并得到著名相声演员牛群老师的耳提面命之后，他在军队中留下的最后一件大事是拍摄了一部军旅题材的微电影。
Figure 1: 徐导和Tom Cruise、Steven Spielberg谈笑风生以上照片有点搞笑哈。为了保护徐导的个人隐私，和牛老师的照片我就不放了。
和他之前拍摄的作品相比。这部电影故事是原创的。布景也更加宏大。
以下是徐导以往的作品，如向《喜剧之王》致敬的《外卖》：
演绎了武侠爱情的《一世安》：
以及，异常青涩的处女作《寻》：
徐导在不断进步呢。对于我这种半吊子鉴赏者来说。看着朋友一部部推出新作，是件有意思的事情。作为有多年交情的铁子，希望他的作品能早日登录院线:D
这里有一波狗粮。想看的看看吧。</description>
    </item>
    
    <item>
      <title>日不日记是个问题</title>
      <link>/zh/diary/</link>
      <pubDate>Tue, 27 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/zh/diary/</guid>
      <description>--网站建成有一段时间了。一直在考虑写不写博客的事情。
我在高中时期是写日记的。所记大多是意识流。换句话说，是将学业之苦一五一十倾倒出来。后来发现此法常常使痛苦加倍。遂放弃。后来受《邪不压正》台词的影响：“一个写日记的人能可靠吗，正经人谁写日记啊？”;“心里话谁写日记里啊，写出来的能叫心里话吗？下贱！”总觉得心里话写出来有种贩卖隐私的做作感。一开始我对个人网站的定位是作为技术分享和个人备忘之用。可惜我没有技术，嗯。
1.后来据我观察大家少时间和兴趣观察别人的私事（可见我多闲）。换句话说，写了也没人看。
2.我修改这个网站外观浪费了大量时间（固定导航栏还参考了Rolling Stone网站）。不写点啥有点说不过去。
3.购买域名还花了钱。
4.我完全可以不写心里话。
5.纯技术博客好无聊。
综上，我觉得能在自己的网络空间和自己唠唠嗑儿也许是挺酷的事情。</description>
    </item>
    
    <item>
      <title>SQL查询语句</title>
      <link>/zh/sql/</link>
      <pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/zh/sql/</guid>
      <description>学而时习之，不亦乐乎？
——孔子
MySQL安装(基于Windows)
MySQL 教程
廖雪峰SQL教程
W3school SQL教程
数据：NBA技术统计和球员薪酬数据，如果一名球员在同一个赛季辗转多只球队，就会产生多行记录。
本文基于MySQL。
变量排序SELECT salary17_18,Player FROM salary ORDER BY salary17_18 DESC;删除 &amp;amp; 增添列ALTER TABLE salary DROP COLUMN TmADD COLUMN Team VARCHAR;重编码新变量ALTER TABLE salary ADD salary17_18 FLOAT;UPDATE salary SET salary17_18 = season17_18/1000000.tg {border-collapse:collapse;border-spacing:0;}.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}.tg .tg-lboi{border-color:inherit;text-align:left;vertical-align:middle}.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}f1PlayerTmseason17_18salary17_181Stephen CurryGSW3468255034.</description>
    </item>
    
    <item>
      <title>使用Python开发信用卡申请评分模型</title>
      <link>/zh/pyscore/</link>
      <pubDate>Sat, 10 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/zh/pyscore/</guid>
      <description>页面跳转中···
window.location.replace(&#34;https://xsong.ltd/archives/pandas/scorecard&#34;)</description>
    </item>
    
    <item>
      <title>NBA球员薪资分析：基于AdaBoost算法的Python实战</title>
      <link>/zh/nba/</link>
      <pubDate>Thu, 25 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/zh/nba/</guid>
      <description>页面跳转中···
window.location.replace(&#34;https://xsong.ltd/archives/pandas/nba&#34;)</description>
    </item>
    
    <item>
      <title>使用RStudio写作</title>
      <link>/zh/rmarkdown/</link>
      <pubDate>Sat, 08 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/zh/rmarkdown/</guid>
      <description>一些对理解本文有用的链接谢益辉: Sweave：打造一个可重复的统计研究流程
knitr 与可重复的统计研究（花絮篇）
knitr中文介绍
knitr选项函数
R Markdown: The Definitive Guide
宋春林：用LaTeX写学位论文
用 knitr 写作业
在R Markdown文档中使用中文
我一开始使用LaTeX写论文。我一直以来用的是MikTeX。
而之所以不使用TeXmaker或是CTeX是因为它们容易出Bug而且不简约（主要是因为懒得花时间学）。个人认为MikTeX是最轻量级的TeX了。然而，MikTeX的界面过于简单粗暴，并且无法更换背景颜色（我喜欢使用深色界面保护视力，但MikTeX无法修改）。
Figure 1: MikTeX界面然而，RStudio的界面漂亮简单。也可以选择保护视力的深色主题。况且作为R用户，将写作、制作幻灯片、统计分析等工作整合到R Studio也大大提升了工作效率。如何做到这一点呢？
首先要安装LaTeX环境。安装后R会自动识别这个环境。Windows用户请注意，MikTeX一定要安装在全英文路径下！ MikTeX一定要安装在全英文路径下！ MikTeX一定要安装在全英文路径下！
后续需要安装一些R包，如Knitr，tinytex等（具体的R包我就不列出了，如果你没有安装，R会提示你的）。
然后需要配置一下R Studio的环境:
Figure 2: 依次点击Tools - Global Options - Sweave配置Sweave环境其中，Weave Rnw files using选knitr。想要写中文LaTeX文档必须选XeLaTeX环境。
我们点击Open File打开一个LaTeX文档：
Figure 3: 点击Open File打开一个LaTeX文档打开后，可以直接在RStudio中进行编辑写作。完成后，点击上方Complie PDF编译LaTeX文档，如图：
Figure 4: 点击Complie PDF编译LaTeX文档编译成功的PDF文档（是我用于某课程pre的LaTeX Beamer）如图：
Figure 5: 编译好的PDF文档编辑公式我使用Mathtype或者这个在线工具。Mathtype的好处在于可以直接将公式复制为LaTeX代码(需要事先设置好剪切和复制预置选项)：</description>
    </item>
    
    <item>
      <title>交叉验证：基于caret包</title>
      <link>/zh/cross/</link>
      <pubDate>Sat, 25 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/zh/cross/</guid>
      <description>Cross-validation: evaluating estimator performance
基本概念交叉验证是机器学习中的常用模型选择方法。其中最常用的方法是K折交叉验证(k-fold cross validation)。K折交叉验证重复使用数据，把给定的数据切分为K个互斥子集，每次使用1个子集作为测试集，使用余下k-1个子集的并集作为训练集。其中，训练集用于模型的训练，测试集用于模型的评估和选择。在样本量不够充足的情况下，交叉验证法通过重复使用数据能够减少样本划分不同导致的差别，并且选择测试误差最小的模型，增强模型的泛化能力。
划分测试集和训练集同样有助于更加客观地评价模型的泛化能力。交叉验证也是模型调节超参数的评价过程。
交叉验证主要有以下种类：
简单交叉验证 (hold-out cross validation)
k折交叉验证 (K-fold cross-validation)
留一交叉验证(leave-one-out cross validation)
Figure 1: K折交叉验证原理：所有数据被划分为训练集和测试集。其中，训练集被划分为K份，循环使用其中的K-1份充当训练集，使用剩下的1分充当验证集。谢益辉的统计动画R包animation直观地展示了交叉验证方法。
任务：通过一系列特征预测波士顿房价
输入?mlbench::BostonHousing查看数据集解释。下面主要使用caret包(classification and regression training)进行交叉验证。
`%&amp;gt;%` &amp;lt;- magrittr::`%&amp;gt;%`library(caret)library(readr)library(tidyr)library(dplyr)library(ggplot2)library(pROC)library(stargazer)library(ROSE)R示例10折交叉验证 (K-fold cross-validation)rfControl &amp;lt;-trainControl( #10折交叉验证method =&amp;quot;cv&amp;quot;, number =10 )library(mlbench) #加载数据集data(BostonHousing)head(BostonHousing) crim zn indus chas nox rm age dis rad tax ptratio b1 0.</description>
    </item>
    
    <item>
      <title>生存分析云笔记</title>
      <link>/zh/survival/</link>
      <pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/zh/survival/</guid>
      <description>本文系复旦大学人口学系张震老师和华东师范大学人口研究所李强老师的数据分析课程笔记。
一个R生存分析应用的介绍网页Survival Analysis with R
生存分析应用：移动通讯运营商的用户流失问题分析
两篇中文文献：
李强, 张震. (2009). 生存分析中时间变量的选择[J]. 中国人口科学(6), 88-95.
李强, 徐刚, 陈丽梅.(2019) 生存分析的应用误区[J]. 中国人口科学(01):101-112.
基本概念社会调查只能观察到状态。人口学关心从一个状态到另一个状态转移的风险。试想每一种状态是一个格子，格子内部是人口频数。人口学能通过数频数的方式估计状态转移的风险。在一个状态内待的时间和风险有着密切的关系。\(T\)为随机变量，上帝也不知道
生存函数：\(S(t) = P(T &amp;gt; t)\)。是存活概率也是存活百分比。
失效函数(Failure Function)：\(F(t)\),\(S(t) = 1 - F(t)\), \(F(t)\)是T的累积分布函数。
\(f(t) = \frac{{dF(t)}}{{dt}}\)，即\(S(t)\)的斜率。等价于生存时间的概率密度函数(直方图)。是无条件的风险。
风险函数: \[h(t) = \mathop {\lim }\limits_{\Delta t \to 0} \frac{{P(t \le T &amp;lt; t + \Delta t|T \ge t)}}{{\Delta t}},0 &amp;lt; h(t) &amp;lt; + \infty \]
\(h(t)\)不是密度也不是概率。
censor(删截): 知道事件发生，但不知道事件何时发生。事件观测期内无法观测。
truncate(截平): 只有在给定观测期内的个体才会被观测到的状况。样本选择问题。生存函数对应于某种条件概率。</description>
    </item>
    
    <item>
      <title>Python面向对象基础</title>
      <link>/zh/pyobject/</link>
      <pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/zh/pyobject/</guid>
      <description>class Dog:def bark(self):print(&amp;quot;woo woo woo&amp;quot;)dog1=Dog()dog1.bark()woo woo wooclass Dog:def bark(self,xm):self.name = xmprint(&amp;quot;woo woo woo, I am &amp;quot;+self.name)dog1=Dog()dog1.bark(&amp;quot;Lulu&amp;quot;) woo woo woo, I am Lulu##__init__()方法class Dog:def __init__(self,name,color):self.name = nameself.color = colordef bark(self):print(&amp;quot;woo,woo,woo,我是&amp;quot;+ self.name +&amp;quot;!&amp;quot;)dog1 = Dog(&amp;quot;阿黄&amp;quot;,&amp;quot;黄色&amp;quot;)dog1.bark()#print(&amp;quot;刚才创建了一个狗对象，名叫：&amp;quot;+dog1.name+&amp;quot;!&amp;quot;)#bark()woo,woo,woo,我是阿黄!dog1 = Dog(&amp;quot;阿黄&amp;quot;,&amp;quot;黄色&amp;quot;)class Dog:number = 0def __init__(self,name):self.name = nameDog.</description>
    </item>
    
    <item>
      <title>排序和查找算法(Python实现)</title>
      <link>/zh/suanfa/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/zh/suanfa/</guid>
      <description>排序算法冒泡排序法def bubble(List):for j in range(len(List)-1,0,-1):print(List)for i in range(0,j):if List[i]&amp;gt;List[i+1]:List[i],List[i+1] = List[i+1],List[i]return List testlist = [49,38,65,97,76,13,27,49]print(&amp;#39;结果：&amp;#39;,bubble(testlist))[49, 38, 65, 97, 76, 13, 27, 49][38, 49, 65, 76, 13, 27, 49, 97][38, 49, 65, 13, 27, 49, 76, 97][38, 49, 13, 27, 49, 65, 76, 97][38, 13, 27, 49, 49, 65, 76, 97][13, 27, 38, 49, 49, 65, 76, 97][13, 27, 38, 49, 49, 65, 76, 97]结果： [13, 27, 38, 49, 49, 65, 76, 97]选择排序算法#选择排序算法：程序填空def selection_sort(L):N = len(L) #提取列表长度Nexchange_count = 0for i in range(0, N-1): #从0开始循环min_index = i #排序序列的末尾位置for j in range(i+1,N): #嵌套循环if L[min_index] &amp;gt; L[j]: #第一次循环L[0]&amp;gt;L[1] min_index = j #第一次循环min_index=1 j是二者最小值的列表索引。 #min_index永远等于最小值索引#以下是移动程序if min_index!</description>
    </item>
    
    <item>
      <title>如何查看R包中的小品文? </title>
      <link>/zh/vignette/</link>
      <pubDate>Tue, 07 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/zh/vignette/</guid>
      <description>用R实现各种分析任务需要学习不同的R包。学习R包的同时需要结合统计理论。因此仅仅看帮助文档和用户手册（Reference manual）是不够的。作为学习R包的重要资源，小品文（Vignettes，或翻译为简介）将统计理论、代码与示例相结合，是学习R包和其中思想的好材料。下文讲解如何使用vignette和browseVignettes两个函数获取R包的官方小品文。
在CRAN上发布的R包往往会有一个官方主页。在搜索引擎中键入R rpart或CRAN rpart便能够找到此包主页。
rpart的官方主页如下所示：
其中，Downloads一栏下便有用户手册和小品文的下载按钮，点击即可下载。
这种方法其实多此一举了！
由于R在下载程序包时，已将小品文下载下来。我们可以使用utils包(这个包含许多有用函数的包不需要加载)中的vignette函数自动提取小品文。但首先我们需要提取R包的小品文名称，代码如下：
vignette(, package = &amp;quot;rpart&amp;quot;)输出结果如下所示：
Vignettes in package ‘rpart’:longintro Introduction to Rpart (source, pdf)usercode User Written SplitFunctions (source, pdf)可以发现，rpart包有两篇小品文，《Introduction to Rpart》和《User Written Split Functions》。分别简称为“longintro”和“usercode”。现在，就可以根据简称提取小品文了，输入：
vignette(&amp;quot;longintro&amp;quot;, package = &amp;quot;rpart&amp;quot;)第一篇《Introduction to Rpart》的pdf便会自动跳出：
然后便可以阅读了。这里更推荐使用browseVignettes函数，操作更为简单。弹出的小品文列表直接点击就可以阅读：
browseVignettes(package = &amp;quot;rpart&amp;quot;)很多R包的小品文是PDF版本，当然还有的是html形式的，如ggplot2的小品文：
vignette(&amp;quot;ggplot2-specs&amp;quot;, package = &amp;quot;ggplot2&amp;quot;)</description>
    </item>
    
  </channel>
</rss>