ceps <- read_csv("C:/Users/xsong/Desktop/table/cepscleaned.csv")
library(haven)
library(ggplot2)
library(dplyr)
library(plyr)
library(rpart)
library(rpart.plot)
library(pROC)
library(tidyr)
library(randomForest)
library(mice)
library(xgboost)
library(readr)
`%>%` <- magrittr::`%>%`
ceps <- read_csv("C:/Users/xsong/Desktop/table/cepscleaned.csv")
ceps <- ceps %>%
select(stdmat,everything()) %>%
na.omit()
cepsmatrix <- model.matrix(stdmat ~ grade9+sex+onechi+drunk+qurel+relation+desk+net+maedu+faedu+eduexp+dialect+chmwk+chcos+qianzi+futcfd+dial+chidia+eduyexp+huko+eduy+dangy+houspro+classtm+clpre+revitm+know+subject+drsmok+commhr+schcsrm+comno+buget+eduqua+teainc+schtype+fight+brkpb+smok+drink
,ceps)
View(cepsmatrix)
write.csv(cepsmatrix,file="C:/Users/xsong/Desktop/table/cepsmatrix.csv",row.names = F)
cepsmatrix$stdmat
View(cepsmatrix)
cepsmatrix$grade9
ceps <- read_csv("C:/Users/xsong/Desktop/table/cepscleaned.csv")
ceps <- ceps %>%
select(stdmat,everything()) %>%
na.omit()
cepsmatrix <- model.matrix(stdmat ~ grade9+sex+onechi+drunk+qurel+relation+desk+net+maedu+faedu+eduexp+dialect+chmwk+chcos+qianzi+futcfd+dial+chidia+eduyexp+huko+eduy+dangy+houspro+classtm+clpre+revitm+know+subject+drsmok+commhr+schcsrm+comno+buget+eduqua+teainc+schtype+fight+brkpb+smok+drink
,ceps)[,-1]
write.csv(cepsmatrix,file="C:/Users/xsong/Desktop/table/cepsmatrix.csv",row.names = F)
cepsreponse <- ceps %>%
select(stdmat) %>%
unlist() %>%
as.numeric()
write.csv(cepsreponse,file="C:/Users/xsong/Desktop/table/cepsreponse",row.names = F)
cepsresponse <- ceps %>%
select(stdmat) %>%
unlist() %>%
as.numeric()
write.csv(cepsresponse,file="C:/Users/xsong/Desktop/table/cepsresponse",row.names = F)
write.csv(cepsresponse,file="C:/Users/xsong/Desktop/table/cepsresponse.csv",row.names = F)
library(haven)
library(ggplot2)
library(dplyr)
#library(plyr)
library(rpart)
library(rpart.plot)
library(pROC)
library(tidyr)
library(randomForest)
library(mice)
library(xgboost)
library(readr)
`%>%` <- magrittr::`%>%`
ceps <- read_csv("C:/Users/xsong/Desktop/table/ceps_train.csv")
test <- read_csv("C:/Users/xsong/Desktop/table/ceps_test.csv")
cepsmatrix <- model.matrix(stdmat ~ grade9+sex+onechi+drunk+qurel+relation+desk+net+maedu+faedu+eduexp+dialect+chmwk+chcos+qianzi+futcfd+dial+chidia+eduyexp+huko+eduy+dangy+houspro+classtm+clpre+revitm+know+subject+drsmok+commhr+schcsrm+comno+buget+eduqua+teainc+schtype+fight+brkpb+smok+drink
,ceps)[,-1]
cepsresponse <- ceps %>%
select(stdmat) %>%
unlist() %>%
as.numeric()
#options(na.action="na.fail")
library(glmnet)
x_train <- model.matrix(stdmat ~ grade9+sex+onechi+drunk+qurel+relation+desk+net+maedu+faedu+eduexp+dialect+chmwk+chcos+qianzi+futcfd+dial+chidia+eduyexp+huko+eduy+dangy+houspro+classtm+clpre+revitm+know+subject+drsmok+commhr+schcsrm+comno+buget+eduqua+teainc+schtype+fight+brkpb+smok+drink
,ceps)[,-1]
y_train <- ceps %>%
select(stdmat) %>%
unlist() %>%
as.numeric()
cvfit <- cv.glmnet(x_train,  #十折交叉验证
y_train,
alpha = 1)
best <- cvfit$lambda.min
x_test <- model.matrix(stdmat ~ grade9+sex+onechi+drunk+qurel+relation+desk+net+maedu+faedu+eduexp+dialect+chmwk+chcos+qianzi+futcfd+dial+chidia+eduyexp+huko+eduy+dangy+houspro+classtm+clpre+revitm+know+subject+drsmok+commhr+schcsrm+comno+buget+eduqua+teainc+schtype+fight+brkpb+smok+drink
,test)[,-1]
#schids+clsids+ids
y_test <- test %>%
select(stdmat) %>%
unlist() %>%
as.numeric()
lasso_mod <- glmnet(x_test,
y_test,
alpha = 1)
lasso_mod
?glmnet
best <- cvfit$lambda.min
best
lasso.mse <- predict(lasso_mod,type='mse',s=best)
lasso.mse <- predict(lasso_mod,s=best)
lasso_mod <- glmnet(x_test,y_test,alpha = 1,lambda=best)
lasso_mod
summary(lasso_mod
)
lasso.coef <- predict(lasso_mod,type='coefficients',s=best)[1:55 ,]
coeffin <- lasso.coef %>%
as.data.frame() %>%
rename('lasso.coef'='.') %>%
mutate(name=rownames(.)) %>%
filter(lasso.coef<20)
ggplot(coeffin,aes(reorder(name,lasso.coef),lasso.coef)) +
geom_segment(aes(x=reorder(name,lasso.coef), xend=reorder(name,lasso.coef), y=0, yend=lasso.coef),size=0.7) +
geom_point(size=2, color='red')+
coord_flip()+
labs(x='变量',y='LASSO回归系数') +
theme_bw()
browseVignettes('glmnet')
lasso.mse <- predict(lasso_mod,s=best)
cvfit <- cv.glmnet(x_train,y_train,type.measure='mse',alpha = 1)
best <- cvfit$lambda.min
lasso_mod <- glmnet(x_test,y_test,alpha = 1,lambda=best)
mse.1 = mse(lasso_mod$fit[,lambda.id], y_test)
mse = function(x,y) { mean((x-y)^2)}
mse.1 = mse(lasso_mod$fit[,lambda.id], y_test)
mse  <-  function(x,y) { mean((x-y)^2)}
mse  <-  function(x,y) { mean((x-y)^2)}
mse.1 = mse(lasso_mod$fit[,best], y_test)
mse.1
cvfit <- cv.glmnet(x_train,y_train,type.measure='mse',alpha = 1)
best <- cvfit$lambda.min
lasso_mod <- glmnet(x_test,y_test,alpha = 1)
mse  <-  function(x,y) { mean((x-y)^2)}
mse.1 = mse(lasso_mod$fit[,best], y_test)
mse.1
cvfit <- cv.glmnet(x_train,y_train,type.measure='mse',alpha = 1)
best <- cvfit$lambda.min
#lambda.lasso = cvfit$lambda.min
lambda.id <- which(cvfit$lambda == cvfit$lambda.min)
lambda.id
best
mse.1 = mse(cvfit$fit[,lambda.id], ytest)
mse.1 = mse(cvfit$fit[,lambda.id], y_test)
mse.1
mse.1 = mse(cvfit$fit[,lambda.id],y_train)
mse.1
cvfit <- cv.glmnet(x_train,y_train,type.measure='mse',alpha = 1)
best <- cvfit$lambda.min
#lambda.lasso = cvfit$lambda.min
lambda.id <- which(cvfit$lambda == cvfit$lambda.min)
mse.1 = mse(cvfit$fit[,lambda.id],y_train)
mse.1
cvfit <- cv.glmnet(x_train,y_train,type.measure='mse',alpha = 1)
best <- cvfit$lambda.min
#lambda.lasso = cvfit$lambda.min
#lambda.id <- which(cvfit$lambda == cvfit$lambda.min)
#mse.1 = mse(cvfit$fit[,lambda.id],y_train)
lasso_mod <- glmnet(x_test,y_test,alpha = 1,lambda=best)
ridge_pred = predict(lasso_mod,newx = x_test)
mean((ridge_pred - y_test)^2)
cvfit <- cv.glmnet(x_train,y_train,type.measure='mse',alpha = 1)
best <- cvfit$lambda.min
#lambda.lasso = cvfit$lambda.min
#lambda.id <- which(cvfit$lambda == cvfit$lambda.min)
#mse.1 = mse(cvfit$fit[,lambda.id],y_train)
lasso_mod <- glmnet(x_test,y_test,alpha = 1,lambda=best)
ridge_pred = predict(lasso_mod,s=best,newx=x_test)
mean((ridge_pred-y_test)^2)
demo("alphaDemo", package = "MSG")
??diabiet
data(diabetes)
cc <- Linda(group~insulin+glucose+sspg, data=diabetes)
cc
pr <- predict(cc)
tt <- mtxconfusion(cc@grp, pr@classification, printit=TRUE)
data(PimaIndiansDiabetes)
data(PimaIndiansDiabetes,package='mlbench')
View(PimaIndiansDiabetes)
