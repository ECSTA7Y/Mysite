moto4 <- subset(moto,z==4)
moto5 <- subset(moto,z==5)
ggplot(moto, aes(x, y)) +
geom_point(aes(color = z)) +
geom_smooth(method='lm',se=F)
ggplot(moto, aes(x,y),group=z)+
geom_point(aes(color = z)) +
geom_smooth(data = moto1,method='lm',se=F)+
geom_smooth(data = moto2,method='lm',se=F)+
geom_smooth(data = moto3,method='lm',se=F)+
geom_smooth(data = moto4,method='lm',se=F)+
geom_smooth(data = moto5,method='lm',se=F)
setwd("E:/edu/data2")
library(haven)
library(tidyverse)
library(rpart)
library(rpart.plot)
library(lattice)
require(stats)
library(ggplot2)
library(pROC)
library(randomForest)
ceps <- read_dta("E:/edu/data2/ceps.dta")
ceps <- lapply(ceps, unclass)
ceps <- data.frame(ceps)
ceps$schids <- as.factor(ceps$schids)
attach(ceps)
histogram(sdtotal,equal.widths = TRUE, nint = 70, xlab = "标准化总成绩",type = "density",ylab = '密度')
setwd("E:/edu/data2")
library(haven)
library(tidyverse)
library(rpart)
library(rpart.plot)
library(lattice)
require(stats)
library(ggplot2)
library(pROC)
library(randomForest)
ceps <- read_dta("E:/edu/data2/ceps.dta")
ceps <- lapply(ceps, unclass)
ceps <- data.frame(ceps)
ceps$schids <- as.factor(ceps$schids)
attach(ceps)
histogram(sdtotal,equal.widths = TRUE, nint = 70, xlab = "标准化总成绩",type = "density",ylab = '密度')
setwd("E:/edu/data2")
ceps <- read_dta("E:/edu/data2/ceps.dta")
#抽出30所学校，作成绩箱线图
ceps1 <- ceps %>%
group_by(schids) %>%
summarize(mathmean = mean(tr_mat, na.rm = T))
set.seed(2019)
sample <- sample(1:nrow(ceps1),30,replace = F)#随机抽取30个学校
ceps1 <- ceps1[sample,]
ceps1 <- ceps1$schids #提取抽中学校编号的向量
delte <- subset(ceps,schids == ceps1[1])
#遍历抽中的学校id，纵向合并数据框
for (i in ceps1) delte <- rbind(delte, subset(ceps,schids == i))
#箱线图
delte$schids <- as.factor(delte$schids)
ggplot(delte, aes(schids,tr_mat)) +
geom_boxplot(size=0.1,outlier.fill='blue') +
xlab('学校代码') + ylab('数学原始成绩')
ceps <- lapply(ceps, unclass)
ceps <- data.frame(ceps)
setwd("E:/edu/data2")
ceps <- read_dta("E:/edu/data2/ceps.dta")
#抽出30所学校，作成绩箱线图
ceps1 <- ceps %>%
group_by(schids) %>%
summarize(mathmean = mean(tr_mat, na.rm = T))
set.seed(2019)
sample <- sample(1:nrow(ceps1),30,replace = F)#随机抽取30个学校
ceps1 <- ceps1[sample,]
ceps1 <- ceps1$schids #提取抽中学校编号的向量
delte <- subset(ceps,schids == ceps1[1])
#遍历抽中的学校id，纵向合并数据框
for (i in ceps1) delte <- rbind(delte, subset(ceps,schids == i))
#箱线图
delte$schids <- as.factor(delte$schids)
ggplot(delte, aes(schids,tr_mat)) +
geom_boxplot(size=0.1,outlier.fill='blue') +
xlab('学校代码') + ylab('数学原始成绩')
ceps <- lapply(ceps, unclass)
ceps <- data.frame(ceps)
setwd("E:/edu/data2")
ceps <- read_dta("E:/edu/data2/ceps.dta")
#抽出30所学校，作成绩箱线图
ceps1 <- ceps %>%
group_by(schids) %>%
summarize(mathmean = mean(tr_mat, na.rm = T))
set.seed(2019)
sample <- sample(1:nrow(ceps1),30,replace = F)#随机抽取30个学校
ceps1 <- ceps1[sample,]
ceps1 <- ceps1$schids #提取抽中学校编号的向量
delte <- subset(ceps,schids == ceps1[1])
#遍历抽中的学校id，纵向合并数据框
for (i in ceps1) delte <- rbind(delte, subset(ceps,schids == i))
#箱线图
delte$schids <- as.factor(delte$schids)
ggplot(delte, aes(schids,tr_mat)) +
geom_boxplot(size=0.1,outlier.colour = ='blue') +
setwd("E:/edu/data2")
ceps <- read_dta("E:/edu/data2/ceps.dta")
#抽出30所学校，作成绩箱线图
ceps1 <- ceps %>%
group_by(schids) %>%
summarize(mathmean = mean(tr_mat, na.rm = T))
set.seed(2019)
sample <- sample(1:nrow(ceps1),30,replace = F)#随机抽取30个学校
ceps1 <- ceps1[sample,]
ceps1 <- ceps1$schids #提取抽中学校编号的向量
delte <- subset(ceps,schids == ceps1[1])
#遍历抽中的学校id，纵向合并数据框
for (i in ceps1) delte <- rbind(delte, subset(ceps,schids == i))
#箱线图
delte$schids <- as.factor(delte$schids)
ggplot(delte, aes(schids,tr_mat)) +
geom_boxplot(size=0.1,outlier.colour = 'blue') +
xlab('学校代码') + ylab('数学原始成绩')
ceps <- lapply(ceps, unclass)
ceps <- data.frame(ceps)
setwd("E:/edu/data2")
ceps <- read_dta("E:/edu/data2/ceps.dta")
#抽出30所学校，作成绩箱线图
ceps1 <- ceps %>%
group_by(schids) %>%
summarize(mathmean = mean(tr_mat, na.rm = T))
set.seed(2019)
sample <- sample(1:nrow(ceps1),30,replace = F)#随机抽取30个学校
ceps1 <- ceps1[sample,]
ceps1 <- ceps1$schids #提取抽中学校编号的向量
delte <- subset(ceps,schids == ceps1[1])
#遍历抽中的学校id，纵向合并数据框
for (i in ceps1) delte <- rbind(delte, subset(ceps,schids == i))
#箱线图
delte$schids <- as.factor(delte$schids)
ggplot(delte, aes(schids,tr_mat)) +
geom_boxplot(size=0.1,outlier.colour =  "#56B4E9") +
xlab('学校代码') + ylab('数学原始成绩')
ceps <- lapply(ceps, unclass)
ceps <- data.frame(ceps)
setwd("E:/edu/data2")
ceps <- read_dta("E:/edu/data2/ceps.dta")
#抽出30所学校，作成绩箱线图
ceps1 <- ceps %>%
group_by(schids) %>%
summarize(mathmean = mean(tr_mat, na.rm = T))
set.seed(2018)
sample <- sample(1:nrow(ceps1),30,replace = F)#随机抽取30个学校
ceps1 <- ceps1[sample,]
ceps1 <- ceps1$schids #提取抽中学校编号的向量
delte <- subset(ceps,schids == ceps1[1])
#遍历抽中的学校id，纵向合并数据框
for (i in ceps1) delte <- rbind(delte, subset(ceps,schids == i))
#箱线图
delte$schids <- as.factor(delte$schids)
ggplot(delte, aes(schids,tr_mat)) +
geom_boxplot(size=0.1,outlier.colour =  "#56B4E9") +
xlab('学校代码') + ylab('数学原始成绩')
ceps <- lapply(ceps, unclass)
ceps <- data.frame(ceps)
rm(list=ls())
library(haven)
china_map_data <- read_dta("E:/R_codes/maps/nomissing/chnprovcd.dta")
library(dplyr)
library(plyr)
# prepare work data, which needed to be filled in the map
library(readxl)
mapdata <- read_excel("E:/R_codes/ggplot2map/geodata0131.xlsx")
mapdata <- as.data.frame(mapdata)
mapdata <- select(mapdata,-(NAME)) #reverse selection
china_data <- join(china_map_data, mapdata, type="full")
china_data <- select(china_data,long,lat,group,out12,in12,out14,in14,out16,in16)
View(china_data)
library(reshape2)
long<- melt(china_data, id=c("long", "lat","group"))
View(long)
library(reshape2)
long<- melt(china_data, id=c("long", "lat","group"))
ggplot(china_data, aes(x = long, y = lat, group = group,fill= value)) +
geom_polygon(colour="brown",size=0.2) +
scale_fill_gradientn(colours = c("yellow", "red"),na.value = "white",
breaks = c(10,20,30,40),limits=c(0,43), guide = "legend") +
coord_map("polyconic") +
facet_wrap(~variable) +
theme(
panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = "none",
plot.title = element_text(hjust = 0.5,vjust=0.9, size=11),
legend.title = element_text(size=0),
plot.margin = unit(c(0.001,0.001,0.001,0.001), "cm"))
library(reshape2)
long<- melt(china_data, id=c("long", "lat","group"))
library(ggplot2)
ggplot(china_data, aes(x = long, y = lat, group = group,fill= value)) +
geom_polygon(colour="brown",size=0.2) +
scale_fill_gradientn(colours = c("yellow", "red"),na.value = "white",
breaks = c(10,20,30,40),limits=c(0,43), guide = "legend") +
coord_map("polyconic") +
facet_wrap(~variable) +
theme(
panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = "none",
plot.title = element_text(hjust = 0.5,vjust=0.9, size=11),
legend.title = element_text(size=0),
plot.margin = unit(c(0.001,0.001,0.001,0.001), "cm"))
library(reshape2)
long<- melt(china_data, id=c("long", "lat","group"))
library(ggplot2)
ggplot(long, aes(x = long, y = lat, group = group,fill= value)) +
geom_polygon(colour="brown",size=0.2) +
scale_fill_gradientn(colours = c("yellow", "red"),na.value = "white",
breaks = c(10,20,30,40),limits=c(0,43), guide = "legend") +
coord_map("polyconic") +
facet_wrap(~variable) +
theme(
panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = "none",
plot.title = element_text(hjust = 0.5,vjust=0.9, size=11),
legend.title = element_text(size=0),
plot.margin = unit(c(0.001,0.001,0.001,0.001), "cm"))
library(reshape2)
long<- melt(china_data, id=c("long", "lat","group"))
library(ggplot2)
ggplot(long, aes(x = long, y = lat, group = group,fill= value)) +
geom_polygon(colour="brown",size=0.2) +
scale_fill_gradientn(colours = c("yellow", "red"),na.value = "white",
breaks = c(10,20,30,40),limits=c(0,43), guide = "legend") +
coord_map("polyconic") +
facet_wrap(~variable,nrow = 3) +
theme(
panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = "none",
plot.title = element_text(hjust = 0.5,vjust=0.9, size=11),
legend.title = element_text(size=0),
plot.margin = unit(c(0.001,0.001,0.001,0.001), "cm"))
mod1 <- lm(y ~ x data = moto)
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
z <- as.factor(z)
moto <- data.frame(x,y,z)
ggplot(moto, aes(x, y)) +
geom_point(aes(color = z),size=3) +
geom_smooth(method='lm',se=F)
ggplot(moto, aes(x, y)) +
geom_point(aes(color = z)) +
facet_wrap(~z, nrow = 2) +
geom_smooth(method='lm',se=F)
mod1 <- lm(y ~ x data = moto)
mod1 <- lm(y ~ x,data = moto)
grid <- moto %>%
data_grid(x) %>%
gather_predictions(mod1)
library
modelr
library(modelr)
grid <- moto %>%
data_grid(x) %>%
gather_predictions(mod1)
View(grid)
ggplot(moto, aes(x, y,group=z)) +
geom_point(aes(color = z),size=3) +
geom_line(data = grid, aes(y = y))
ggplot(moto, aes(x, y,group=z)) +
geom_point(aes(color = z),size=3) +
geom_line(data = grid, aes(y = y,x=x))
ggplot(moto, aes(x, y,group=z,color = z)) +
geom_point(size=3) +
geom_line(data = grid, aes(y = y,x=x))
library(modelr)
ggplot(moto, aes(x, y,group=z)) +
geom_point(aes(color = z),size=3) +
geom_smooth(method='lm',se=F)
mod1 <- lm(y ~ x,data = moto)
grid <- moto %>%
data_grid(x) %>%
gather_predictions(mod1)
head(grid)
ggplot(moto, aes(x, y,group=z,color = z)) +
geom_point(size=3) +
geom_line(data = grid, aes(y = y,x=x))
library(modelr)
ggplot(moto, aes(x, y,group=z)) +
geom_point(aes(color = z),size=3) +
geom_smooth(method='lm',se=F)
mod1 <- lm(y ~ x + z,data = moto)
grid <- moto %>%
data_grid(x) %>%
gather_predictions(mod1)
head(grid)
ggplot(moto, aes(x, y,group=z,color = z)) +
geom_point(size=3) +
geom_line(data = grid, aes(y = y,x=x))
library(modelr)
ggplot(moto, aes(x, y,group=z)) +
geom_point(aes(color = z),size=3) +
geom_smooth(method='lm',se=F)
mod1 <- lm(y ~ x + z,data = moto)
grid <- moto %>%
data_grid(x,z) %>%
gather_predictions(mod1)
head(grid)
ggplot(moto, aes(x, y,group=z,color = z)) +
geom_point(size=3) +
geom_line(data = grid, aes(y = y,x=x))
library(modelr)
ggplot(moto, aes(x, y,group=z)) +
geom_point(aes(color = z),size=3) +
geom_smooth(method='lm',se=F)
mod1 <- lm(y ~ x + z,data = moto)
grid <- moto %>%
data_grid(x,y) %>%
gather_predictions(mod1)
library(modelr)
ggplot(moto, aes(x, y,group=z)) +
geom_point(aes(color = z),size=3) +
geom_smooth(method='lm',se=F)
mod1 <- lm(y ~ x + z,data = moto)
grid <- moto %>%
data_grid(x) %>%
gather_predictions(mod1)
head(grid)
ggplot(moto, aes(x, y,group=z,color = z)) +
geom_point(size=3) +
geom_line(data = grid, aes(y = y,x=x))
library(modelr)
ggplot(moto, aes(x, y,group=z)) +
geom_point(aes(color = z),size=3) +
geom_smooth(method='lm',se=F)
mod1 <- lm(y ~ x + z,data = moto)
grid <- moto %>%
data_grid(x,z) %>%
gather_predictions(mod1)
head(grid)
ggplot(moto, aes(x, y,group=z,color = z)) +
geom_point(size=3) +
geom_line(data = grid, aes(y = prde,x=x))
library(modelr)
ggplot(moto, aes(x, y,group=z)) +
geom_point(aes(color = z),size=3) +
geom_smooth(method='lm',se=F)
mod1 <- lm(y ~ x + z,data = moto)
grid <- moto %>%
data_grid(x,z) %>%
gather_predictions(mod1)
head(grid)
ggplot(moto, aes(x, y,group=z,color = z)) +
geom_point(size=3) +
geom_line(data = grid, aes(y = pred,x=x))
library(modelr)
ggplot(moto, aes(x, y,group=z)) +
geom_point(aes(color = z),size=3) +
geom_smooth(method='lm',se=F)
mod1 <- lm(y ~ x + z,data = moto)
grid <- moto %>%
data_grid(x,z) %>%
gather_predictions(mod1)
head(grid)
ggplot(moto, aes(x, y,group=z)) +
geom_point(aes(color = z),size=3) +
geom_line(data = grid, aes(y = pred,x=x))
#不同组拟合不同的模型
ggplot(moto, aes(x, y,group=z)) +
geom_point(aes(color = z),size=3) +
geom_smooth(method='lm',se=F)
library(modelr)
mod1 <- lm(y ~ x + z,data = moto)
grid <- moto %>%
data_grid(x,z) %>%
gather_predictions(mod1)
knitr::kable(head(grid),caption="数据概要",align='c')
#不同组拟合同一个模型，控制组z
ggplot(moto, aes(x, y,group=z)) +
geom_point(aes(color = z),size=3) +
geom_line(data = grid, aes(y = pred,x=x),size=0.7,color='blue') +
ylim(0.5,2)
library(rgdal)
bottom  <- readOGR(dsn = "E:/R_codes/maps/CHN_adm/CHN_adm2.shp",stringsAsFactors=FALSE)
install.packages('rgdal')
library(rgdal)
bottom  <- readOGR(dsn = "E:/R_codes/maps/CHN_adm/CHN_adm2.shp",stringsAsFactors=FALSE)
library(ggplot2)
bottomdata <- fortify(bottom)
x <- bottom@data
xs <- data.frame(x,id=seq(0:344)-1)
library(plyr)
china_map <- join(bottomdata, xs, type = "full")
table(china_map$NAME_2)
library(readxl)
jin <- read_excel("E:/R_codes/maps/pointmap/citydis.xlsx")
china_map <- join(china_map, jin, type = "full")
table(china_map$freq)
point <- china_map
point <- na.omit(point)
midpos <- function(x) mean(range(x,na.rm=TRUE)) #???????????????????????????
centres <- ddply(china_map,.(NAME_2),colwise(midpos,.(long,lat)))
center <- join(centres, jin, type = "full")
center  <- na.omit(center)
library(ggplot2)
ggplot(china_map,aes(x=long,y=lat)) +
geom_polygon(aes(group = group),fill="white",color="black",size=0.1) + #?????????,NA???????????? +
geom_point(mapping = aes(x=long, y=lat, size = freq),data = center, colour = "steelblue") +
coord_map("polyconic") +
theme(
panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = c(0.85,0.5)
)
ggplot(china_map,aes(x=long,y=lat)) +
geom_polygon(aes(group = group),fill="white",color="black",size=0.1) + #?????????,NA???????????? +
geom_point(mapping = aes(x=long, y=lat, size = freq),data = center, colour = "steelblue") +
coord_map("polyconic") +
theme(
panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = c(0.85,0.5)
)
rm(list=ls())
setwd("C:/Users/lenovo/Desktop/geography/jin")
#library(maptools)
#bottom <- readShapePoly("E:/R codes/maps/CHN_adm/CHN_adm2.shp")
library(rgdal)
bottom  <- readOGR(dsn = "E:/R_codes/maps/CHN_adm/CHN_adm2.shp",stringsAsFactors=FALSE)
library(ggplot2)
bottomdata <- fortify(bottom)
x <- bottom@data
xs <- data.frame(x,id=seq(0:344)-1)
library(plyr)
china_map <- join(bottomdata, xs, type = "full")
table(china_map$NAME_2)
library(readxl)
jin <- read_excel("E:/R_codes/maps/pointmap/citydis.xlsx")
china_map <- join(china_map, jin, type = "full")
table(china_map$freq)
point <- china_map
point <- na.omit(point)
midpos <- function(x) mean(range(x,na.rm=TRUE)) #???????????????????????????
centres <- ddply(china_map,.(NAME_2),colwise(midpos,.(long,lat)))
center <- join(centres, jin, type = "full")
center  <- na.omit(center)
library(ggplot2)
ggplot(china_map,aes(x=long,y=lat)) +
geom_polygon(aes(group = group),fill="white",color="black",size=0.1) + #?????????,NA???????????? +
geom_point(mapping = aes(x=long, y=lat, size = freq),data = center, colour = "steelblue") +
coord_map("polyconic") +
theme(
panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = c(0.85,0.5)
)
mar<-c(652,1537,598,242,36,46,38,21,218,327,106,67)
caff.marital<-matrix(mar,nrow=3,byrow=T)
caff.marital
?matrix
?cbind
h <- c(1:24)
h
Z <- array(h, dim=c(3,4,2))
Z
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
