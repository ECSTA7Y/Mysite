height=550,width=5,size =1.2) +
geom_smooth(data=pndt,
aes(agem,inc,factor(reland),
group=factor(reland)),span=99) +
labs(x = '平均年龄',y = '家庭平均收入(元)') +
facet_wrap(~year,nrow = 1)+
ylim(0,30000)+
theme_bw()+
scale_colour_manual(values = c("red", "blue", "green"))
#paneldata
set.seed(1911)
pndt <- paneldata %>%
mutate(inc=exp(lnfinc)) %>%
filter(inc<50000 & agem>25 & agem <80 & year>2010)
sample <- sample(1:nrow(pndt),2000,replace = F)
sampled <- pndt[sample,]
ggplot() +
geom_jitter(data=sampled,aes(agem,inc,col=factor(reland)),
height=550,width=5,size =1.2) +
geom_smooth(data=pndt,
aes(agem,inc,col=factor(reland),
group=factor(reland)),span=99) +
labs(x = '平均年龄',y = '家庭平均收入(元)') +
facet_wrap(~year,nrow = 1)+
ylim(0,30000)+
theme_bw()+
scale_colour_manual(values = c("red", "blue", "green"))
#ggplot(pndt,aes(inc))+
#  geom_histogram()+
#  facet_wrap(~year)
#ggplot(pndt,aes(lnfinc))+
#  geom_density()+
#  facet_wrap(~year)
#paneldata
set.seed(1911)
pndt <- paneldata %>%
mutate(inc=exp(lnfinc)) %>%
filter(inc<50000 & agem>25 & agem <80 & year>2010) %>%
drop_na(reland)
sample <- sample(1:nrow(pndt),2000,replace = F)
sampled <- pndt[sample,]
ggplot() +
geom_jitter(data=sampled,aes(agem,inc,col=factor(reland)),
height=550,width=5,size =1.2) +
geom_smooth(data=pndt,
aes(agem,inc,col=factor(reland),
group=factor(reland)),span=99) +
labs(x = '平均年龄',y = '家庭平均收入(元)') +
facet_wrap(~year,nrow = 1)+
ylim(0,30000)+
theme_bw()+
scale_colour_manual(values = c("red", "blue", "green"))
#ggplot(pndt,aes(inc))+
#  geom_histogram()+
#  facet_wrap(~year)
#ggplot(pndt,aes(lnfinc))+
#  geom_density()+
#  facet_wrap(~year)
18+11+25+26+24+12+27+21+30+29+38+19+45+27+73+14
29+27+15+20+28+33+90+26+40+16+52+19+19+187+30+26
32+29+36+21+62+120+27+79+31+19+27+18+34+17+44+30
17+29+16+113+19+27+28+38+20+30+29+32+40+52+15+38
16+15+16+30+25+15+49+86+55+91+14+84+33+33+16+19
28+51+58+16+19
439+657+626+543+597+172
knitr::opts_chunk$set(echo=F,comment=NA,error=T,message = F,warning = F,fig.align='center',out.width ='100%',fig.showtext=T,dev='pdf')
library(MASS)
library(modelr)
library(ggplot2)
library(magrittr)
library(plyr)
library(dplyr)
library(tidyr)
library(readxl)
library(readr)
library(reshape2)
library(haven)
library(rgdal)
library(cowplot)
paneldata <- read_dta('E:/MaLearning/paneldata.dta')
paneldata %>%
filter(year>2010,year<2016) %>%
mutate(hkprov=as.factor(hkprov),
inc=exp(lnfinc)) %>%
drop_na(reland,hkprov,inc,year) %>%
ggplot() +
geom_boxplot(aes(hkprov,lnfinc,fill = factor(reland)))+
facet_wrap(~year,nrow=2)+
labs(x='户口省份编号',y='家庭人均收入对数')+
theme(legend.title='是否土地转入')+
theme_bw()
paneldata %>%
filter(year>2010,year<2016) %>%
mutate(hkprov=as.factor(hkprov),
inc=exp(lnfinc)) %>%
drop_na(reland,hkprov,inc,year) %>%
ggplot() +
geom_boxplot(aes(hkprov,lnfinc,fill = factor(reland)))+
facet_wrap(~year,nrow=2)+
labs(x='户口省份编号',y='家庭人均收入对数',fill = '是否土地转入')+
theme_bw()
paneldata %>%
mutate(ainc=exp(lnconic)) %>%
filter(year>2010,year<2016) %>%
distinct(dist,ainc,agrato) %>%
ggplot() +
geom_jitter(aes(dist,ainc,color=agrato),width = 5)+
geom_smooth(aes(dist,ainc)) +
labs(x='村委会到县级单位的距离',y='村庄人均收入',
fill = '农业劳动力比例')+
theme_bw()
paneldata %>%
filter(year>2010,year<2016) %>%
drop_na(eduy,lnfinc,reland) %>%
ggplot() +
geom_jitter(aes(eduy,lnfinc,
col= factor(party)),
width = 2,alpha=1/2) +
geom_smooth(aes(eduy,lnfinc,
group=factor(reland),
col=factor(reland)),method='lm')+
facet_wrap(~year,nrow=1)+
labs(x='平均教育年限',y='家庭人均收入',
fill = '是否为党员家庭')+
scale_color_manual(values = c("#F05253", "#2A73CC", "#F05253", "#2A73CC"))+
theme_bw()
paneldata %>%
mutate(inc=exp(lnfinc)) %>%
filter(year>2010,year<2016,
mlabor<1,nonghu==1,
inc<30000) %>%
ggplot() +
geom_jitter(aes(mlabor,inc,
col= factor(party)),
width = 0.02,alpha=1/9) +
geom_smooth(aes(mlabor,inc))+
facet_wrap(~year,nrow=1)+
labs(x='家庭男性劳动力比例',y='平均收入',
fill = '是否为党员家庭')+
scale_color_manual(values = c("#F05253", "#2A73CC", "#F05253", "#2A73CC")) +
theme_bw()
paneldata %>%
filter(year>2010,year<2016) %>%
mutate(hkprov=as.factor(hkprov)) %>%
drop_na(inland,hkprov,lnfinc,year) %>%
ggplot() +
geom_boxplot(aes(hkprov,lnfinc,fill = factor(inland)),na.rm = T) +
facet_wrap(~year,nrow=2)+
labs(x='户口省份编号',y='家庭人均收入对数',fill = '是否土地转出')+
theme_bw()
paneldata %>%
filter(year>2010,year<2016) %>%
drop_na(eduy,lnfinc,reland) %>%
ggplot() +
geom_jitter(aes(eduy,lnfinc,
col= factor(party)),
width = 2,alpha=1/2) +
geom_smooth(aes(eduy,lnfinc,
group=factor(reland),
col=factor(reland)),method='lm')+
facet_wrap(~year,nrow=1)+
labs(x='平均教育年限',y='家庭人均收入',
fill = '是否为党员家庭')+
scale_color_manual(values = c("#F05253", "#2A73CC", "#F05253", "#2A73CC"))+
theme_bw()
paneldata %>%
mutate(inc=exp(lnfinc)) %>%
filter(year>2010,year<2016,
mlabor<1,nonghu==1,
inc<30000) %>%
ggplot() +
geom_jitter(aes(mlabor,inc,
col= factor(party)),
width = 0.02,alpha=1/9) +
geom_smooth(aes(mlabor,inc))+
facet_wrap(~year,nrow=1)+
labs(x='家庭男性劳动力比例',y='平均收入',fill='是否为党员家庭')+
scale_color_manual(values = c("#F05253", "#2A73CC", "#F05253", "#2A73CC")) +
theme_bw()
paneldata %>%
filter(year>2010,year<2016) %>%
ggplot() +
geom_jitter(aes(agem,famsiz,
col= factor(party)),
width = 0.02) +
geom_smooth(aes(agem,famsiz))+
facet_wrap(~year,nrow=1)+
labs(x='平均年龄',y='家庭人口规模',
fill='是否为党员家庭') +
theme_bw()
paneldata %>%
filter(year>2010,year<2016) %>%
ggplot() +
geom_jitter(aes(agem,famsiz,
col= factor(party)),
width = 0.02) +
geom_smooth(aes(agem,famsiz))+
facet_wrap(~year,nrow=1)+
theme_bw()+
labs(x='平均年龄',y='家庭人口规模',
fill='是否为党员家庭') +
paneldata %>%
filter(year>2010,year<2016) %>%
ggplot() +
geom_jitter(aes(agem,famsiz,
col= factor(party)),
width = 0.02) +
geom_smooth(aes(agem,famsiz))+
facet_wrap(~year,nrow=1)+
labs(x='平均年龄',y='家庭人口规模',
fill='是否为党员家庭') +
theme_bw()
paneldata %>%
filter(year>2010,year<2016) %>%
drop_na(eduy,lnfinc,reland) %>%
ggplot() +
geom_jitter(aes(eduy,lnfinc,
col= factor(party)),
width = 2,alpha=1/2) +
geom_smooth(aes(eduy,lnfinc,
group=factor(reland),
col=factor(reland)),method='lm')+
facet_wrap(~year,nrow=1)+
labs(x='平均教育年限',y='家庭人均收入',
fill = '是否为党员家庭')+
guides(fill = guide_legend(title ='是否为党员家庭'))+
scale_color_manual(values = c("#F05253", "#2A73CC", "#F05253", "#2A73CC"))+
theme_bw()
439+657+626+543+597+172
6500-3034
china_map_data <- read_dta("E:/R_codes/maps/nomissing/chnprovcd.dta")
library(ggplot2)
library(dplyr)
library(plyr)
library(readxl)
library(modelr)
library(haven)
library(readr)
library(cowplot)
library(reshape2)
library(rgdal)
`%>%` <- magrittr::`%>%`
china_map_data <- read_dta("E:/R_codes/maps/nomissing/chnprovcd.dta")
mapdata <- read_excel("E:/R_codes/ggplot2map/geodata0131.xlsx")
mapdata <- as.data.frame(mapdata)
mapdata <- select(mapdata,-(NAME))
china_data <- join(china_map_data, mapdata, type="full")
china_data <- select(china_data,long,lat,group,'2011土地租出','2011土地租入','2013土地租出','2013土地租入','2015土地租出','2015土地租入')
long <- melt(china_data, id=c("long", "lat","group"))
ggplot(long, aes(long,lat,group = group,fill= value)) +
geom_polygon(colour='brown',size=0.2) +
scale_fill_gradientn(colours = c('yellow', 'blue'),na.value = 'white',breaks = c(10,20,30,40),limits=c(0,43), guide = 'legend') +
coord_map('polyconic') +
facet_wrap(~variable,nrow = 3) +
labs(x='经度',y='纬度',fill = '土地流转发生率') +
theme_bw()
china_map_data <- read_dta("E:/R_codes/maps/nomissing/chnprovcd.dta")
mapdata <- read_excel("E:/R_codes/ggplot2map/geodata0131.xlsx")
mapdata <- as.data.frame(mapdata)
mapdata <- select(mapdata,-(NAME))
china_data <- join(china_map_data, mapdata, type="full")
china_data <- select(china_data,long,lat,group,'2011土地租出','2011土地租入','2013土地租出','2013土地租入','2015土地租出','2015土地租入')
long <- melt(china_data, id=c("long", "lat","group"))
ggplot(long, aes(long,lat,group = group,fill= value)) +
geom_polygon(colour='brown',size=0.2) +
scale_fill_gradientn(colours = c('red', 'blue'),na.value = 'white',breaks = c(10,20,30,40),limits=c(0,43), guide = 'legend') +
coord_map('polyconic') +
facet_wrap(~variable,nrow = 3) +
labs(x='经度',y='纬度',fill = '土地流转发生率') +
theme_bw()
china_map_data <- read_dta("E:/R_codes/maps/nomissing/chnprovcd.dta")
mapdata <- read_excel("E:/R_codes/ggplot2map/geodata0131.xlsx")
mapdata <- as.data.frame(mapdata)
mapdata <- select(mapdata,-(NAME))
china_data <- join(china_map_data, mapdata, type="full")
china_data <- select(china_data,long,lat,group,'2011土地租出','2011土地租入','2013土地租出','2013土地租入','2015土地租出','2015土地租入')
long <- melt(china_data, id=c("long", "lat","group"))
ggplot(long, aes(long,lat,group = group,fill= value)) +
geom_polygon(colour='brown',size=0.2) +
scale_fill_viridis_d(guide =F) +
coord_map('polyconic') +
facet_wrap(~variable,nrow = 3) +
labs(x='经度',y='纬度',fill = '土地流转发生率') +
theme_bw()
china_map_data <- read_dta("E:/R_codes/maps/nomissing/chnprovcd.dta")
mapdata <- read_excel("E:/R_codes/ggplot2map/geodata0131.xlsx")
mapdata <- as.data.frame(mapdata)
mapdata <- select(mapdata,-(NAME))
china_data <- join(china_map_data, mapdata, type="full")
china_data <- select(china_data,long,lat,group,'2011土地租出','2011土地租入','2013土地租出','2013土地租入','2015土地租出','2015土地租入')
long <- melt(china_data, id=c("long", "lat","group"))
ggplot(long, aes(long,lat,group = group,fill= value)) +
geom_polygon(colour='brown',size=0.2) +
scale_fill_gradientn(colours = c('red', 'steelblue'),na.value = 'white',breaks = c(10,20,30,40),limits=c(0,43), guide = 'legend') +
coord_map('polyconic') +
facet_wrap(~variable,nrow = 3) +
labs(x='经度',y='纬度',fill = '土地流转发生率') +
theme_bw()
china_map_data <- read_dta("E:/R_codes/maps/nomissing/chnprovcd.dta")
mapdata <- read_excel("E:/R_codes/ggplot2map/geodata0131.xlsx")
mapdata <- as.data.frame(mapdata)
mapdata <- select(mapdata,-(NAME))
china_data <- join(china_map_data, mapdata, type="full")
china_data <- select(china_data,long,lat,group,'2011土地租出','2011土地租入','2013土地租出','2013土地租入','2015土地租出','2015土地租入')
long <- melt(china_data, id=c("long", "lat","group"))
ggplot(long, aes(long,lat,group = group,fill= value)) +
geom_polygon(colour='brown',size=0.2) +
scale_fill_gradientn(colours = c('yellow', 'skyblue'),na.value = 'white',breaks = c(10,20,30,40),limits=c(0,43), guide = 'legend') +
coord_map('polyconic') +
facet_wrap(~variable,nrow = 3) +
labs(x='经度',y='纬度',fill = '土地流转发生率') +
theme_bw()
china_map_data <- read_dta("E:/R_codes/maps/nomissing/chnprovcd.dta")
mapdata <- read_excel("E:/R_codes/ggplot2map/geodata0131.xlsx")
mapdata <- as.data.frame(mapdata)
mapdata <- select(mapdata,-(NAME))
china_data <- join(china_map_data, mapdata, type="full")
china_data <- select(china_data,long,lat,group,'2011土地租出','2011土地租入','2013土地租出','2013土地租入','2015土地租出','2015土地租入')
long <- melt(china_data, id=c("long", "lat","group"))
ggplot(long, aes(long,lat,group = group,fill= value)) +
geom_polygon(colour='brown',size=0.2) +
scale_fill_gradientn(colours = c('yellow', 'steelblue'),na.value = 'white',breaks = c(10,20,30,40),limits=c(0,43), guide = 'legend') +
coord_map('polyconic') +
facet_wrap(~variable,nrow = 3) +
labs(x='经度',y='纬度',fill = '土地流转发生率') +
theme_bw()
china_map_data <- read_dta("E:/R_codes/maps/nomissing/chnprovcd.dta")
mapdata <- read_excel("E:/R_codes/ggplot2map/geodata0131.xlsx")
mapdata <- as.data.frame(mapdata)
mapdata <- select(mapdata,-(NAME))
china_data <- join(china_map_data, mapdata, type="full")
china_data <- select(china_data,long,lat,group,'2011土地租出','2011土地租入','2013土地租出','2013土地租入','2015土地租出','2015土地租入')
long <- melt(china_data, id=c("long", "lat","group"))
ggplot(long, aes(long,lat,group = group,fill= value)) +
geom_polygon(colour='brown',size=0.2) +
scale_fill_gradientn(colours = c('yellow', 'navyblue'),na.value = 'white',breaks = c(10,20,30,40),limits=c(0,43), guide = 'legend') +
coord_map('polyconic') +
facet_wrap(~variable,nrow = 3) +
labs(x='经度',y='纬度',fill = '土地流转发生率') +
theme_bw()
install.packages('tidytext')
text <- c("Because I could not stop for Death -",
"He kindly stopped for me -",
"The Carriage held but just Ourselves -",
"and Immortality")
text
library(dplyr)
text_df <- tibble(line = 1:4, text = text)
text_df
library(tidytext)
text_df %>%
unnest_tokens(word, text)
unnest_tokens
?unnest_tokens
library(janeaustenr)
d <- tibble(txt = prideprejudice)
d
d %>%
unnest_tokens(word, txt)
c <- d %>% unnest_tokens(word, txt)
View(c)
d %>%
unnest_tokens(shingle, txt, token = "character_shingles", n = 4)
# tokenize HTML
h <- tibble(row = 1:2,
text = c("<h1>Text <b>is</b>", "<a href='example.com'>here</a>"))
h %>%
unnest_tokens(word, text, format = "html")
# custom function
d %>%
unnest_tokens(word, txt, token = stringr::str_split, pattern = " ")
fit <- lm(dist ~ speed, data = cars)
b   <- coef(fit)
plot(fit)
fit <- lm(dist ~ speed, data = cars)
b   <- coef(fit)
plot(fit)
library(tidytext)
library(janeaustenr)
library(dplyr)
library(stringr)
original_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup()
original_books
View(original_books)
austen_books()
?regex
data(stop_words)
tidy_books <- tidy_books %>%
anti_join(stop_words)
force(stop_words)
View(stop_words)
library(ggplot2)
?geom_col
install.packages('gutenbergr')
library(gutenbergr)
hgwells <- gutenberg_download(c(35, 36, 5230, 159))
View(hgwells)
?gutenberg_download
gutenberg_works()
library(tidyr)
?tidyr
data(billboard)
force(billboard)
View(billboard)
?gather
?pivot_longer()
library(readr)
library(dplyr)
library(tidyr)
library(magrittr)
library(party)
library(rpart)
library(rpart.plot)
library(ggplot2)
library(corrplot)
raptorsplayoffs <- read_csv("E:/MaLearning/nba/raptorsplayoffs.csv")
raptorsreg <- read_csv("E:/MaLearning/nba/raptors_regulars.csv")
raptors_players <- read_csv("E:/MaLearning/nba/raptors_players.csv")
regular_players <- read_csv("E:/MaLearning/nba/regular_players.csv")
players <- regular_players %>%
na_if('-') %>%
filter(PLAYER!='Jodie Meeks',PLAYER!= 'Eric Moreland',
PLAYER!='Jonas Valanciunas',PLAYER!='Jordan Loyd',
PLAYER!='Malcolm Miller',PLAYER!='Chris Boucher',
PLAYER!='Jeremy Lin',PLAYER!='Lorenzo Brown',
PLAYER!='Malachi Richardson',PLAYER!='Marc Gasol',
PLAYER!='Patrick McCaw',PLAYER!='Greg Monroe',
PLAYER!='CJ Miles') %>%
rename('TPP'='3P%','FTP'='FT%',
'FGP'='FG%','win'='W/L') %>%
mutate_if(sapply(.,is.character),as.factor) %>%
select(-'+/-')
View(players)
players <- regular_players %>%
na_if('-') %>%
filter(PLAYER!='Jodie Meeks',PLAYER!= 'Eric Moreland',
PLAYER!='Jonas Valanciunas',PLAYER!='Jordan Loyd',
PLAYER!='Malcolm Miller',PLAYER!='Chris Boucher',
PLAYER!='Jeremy Lin',PLAYER!='Lorenzo Brown',
PLAYER!='Malachi Richardson',PLAYER!='Marc Gasol',
PLAYER!='Patrick McCaw',PLAYER!='Greg Monroe',
PLAYER!='CJ Miles') %>%
rename('TPP'='3P%','FTP'='FT%',
'FGP'='FG%','win'='W/L') %>%
mutate_if(sapply(.,is.character),as.factor) %>%
select(-'+/-') %>%
gather(key,value,-TEAM,-MATCHUP,-DATE,-PLAYER,-win)
View(regular_players)
players <- regular_players %>%
na_if('-') %>%
filter(PLAYER!='Jodie Meeks',PLAYER!= 'Eric Moreland',
PLAYER!='Jonas Valanciunas',PLAYER!='Jordan Loyd',
PLAYER!='Malcolm Miller',PLAYER!='Chris Boucher',
PLAYER!='Jeremy Lin',PLAYER!='Lorenzo Brown',
PLAYER!='Malachi Richardson',PLAYER!='Marc Gasol',
PLAYER!='Patrick McCaw',PLAYER!='Greg Monroe',
PLAYER!='CJ Miles') %>%
rename('TPP'='3P%','FTP'='FT%',
'FGP'='FG%','win'='W/L') %>%
mutate_if(sapply(.,is.character),as.factor) %>%
select(-'+/-') %>%
gather(key,value,-TEAM,-MATCHUP,-DATE,-PLAYER,-win) %>% # long to wide
unite(col,key,PLAYER)
players <- regular_players %>%
na_if('-') %>%
filter(PLAYER!='Jodie Meeks',PLAYER!= 'Eric Moreland',
PLAYER!='Jonas Valanciunas',PLAYER!='Jordan Loyd',
PLAYER!='Malcolm Miller',PLAYER!='Chris Boucher',
PLAYER!='Jeremy Lin',PLAYER!='Lorenzo Brown',
PLAYER!='Malachi Richardson',PLAYER!='Marc Gasol',
PLAYER!='Patrick McCaw',PLAYER!='Greg Monroe',
PLAYER!='CJ Miles') %>%
rename('TPP'='3P%','FTP'='FT%',
'FGP'='FG%','win'='W/L') %>%
mutate_if(sapply(.,is.character),as.factor) %>%
select(-'+/-') %>%
gather(key,value,-TEAM,-MATCHUP,-DATE,-PLAYER,-win) %>% # long to wide
unite(col,key,PLAYER) %>%
spread(col,value)
library(tidytext)
get_sentiments("afinn")
install.packages('AFINN')
library(tidytext)
get_sentiments("afinn")
install.packages('textdata')
library(tidytext)
get_sentiments("afinn")
afinn <- get_sentiments("afinn")
View(afinn)
bing <- get_sentiments("bing")
bing
View(bing)
relig_income
?reshape2
??reshape2
library(reshape2)
?cast
install.packages('ggraph')
library(dplyr)
library(tidyr)
library(tidytext)
library(ggplot2)
library(igraph)
library(ggraph)
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
blogdown:::stop_server()
