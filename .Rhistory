repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
name <- as.data.frame(rownames(imp))
imp <- cbind(imp,name)
imp <- imp %>%
filter(Overall>0) %>%
rename('变量名'='rownames(imp)','重要性'='Overall') %>%
arrange(desc(重要性))
mutate(变量名 = fct_reorder(重要性, n, .desc = TRUE))
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
name <- as.data.frame(rownames(imp))
imp <- cbind(imp,name)
library(forcats)
imp <- imp %>%
filter(Overall>0) %>%
rename('变量名'='rownames(imp)','重要性'='Overall') %>%
arrange(desc(重要性))
mutate(变量名 = fct_reorder(重要性, n, .desc = TRUE))
?fct_reorder
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
name <- as.data.frame(rownames(imp))
imp <- cbind(imp,name)
library(forcats)
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='rownames(imp)','impt'='Overall') %>%
mutate(varname = fct_reorder(varname, impt, .desc = TRUE))
ggplot(imp,aes(varname,impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.2)
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
name <- as.data.frame(rownames(imp))
imp <- cbind(imp,name)
library(forcats)
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='rownames(imp)','impt'='Overall') %>%
mutate(varname = fct_reorder(varname, impt, .desc = TRUE)) %>%
ggplot(aes(varname,impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.2)
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
name <- as.data.frame(rownames(imp))
imp <- cbind(imp,name)
library(forcats)
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='rownames(imp)','impt'='Overall') %>%
mutate(varname = fct_reorder(varname, impt, .desc = TRUE)) %>%
ggplot(aes(varname,impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.2)
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
name <- as.data.frame(rownames(imp))
imp <- cbind(imp,name)
library(forcats)
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='rownames(imp)','impt'='Overall') %>%
mutate(varname = fct_reorder(varname, impt, .desc = TRUE)) %>%
ggplot(aes(varname,impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.2)
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
name <- as.data.frame(rownames(imp))
imp <- cbind(imp,name)
library(forcats)
library(tidyverse)
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='rownames(imp)','impt'='Overall') %>%
mutate(varname = fct_reorder(varname, impt, .desc = TRUE)) %>%
ggplot(aes(varname,impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.2)
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
name <- as.data.frame(rownames(imp))
imp <- cbind(imp,name)
library(forcats)
library(tidyverse)
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='rownames(imp)','impt'='Overall') %>%
mutate(varname = fct_reorder(varname, impt, .desc = TRUE)) %>%
ggplot(aes(varname,impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.2)
?geom_bar
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
name <- as.data.frame(rownames(imp))
imp <- cbind(imp,name)
library(forcats)
library(tidyverse)
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='rownames(imp)','impt'='Overall') %>%
mutate(varname = fct_reorder(varname, impt, .desc = TRUE))
ggplot(imp,aes(varname,impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.2,position = 'dodge')
ggplot(imp,aes(varname,impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.2,position = 'dodge')
ggplot(imp,aes(varname,impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.2,position = 'dodge') +
guides(fill = guide_legend(reverse = TRUE))
ggplot(imp,aes(varname,impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.2,position = 'dodge')+coord_flip()
?fct_reorder
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='rownames(imp)','impt'='Overall') %>%
mutate(varname = fct_reorder(varname, impt, .desc = F))
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
name <- as.data.frame(rownames(imp))
imp <- cbind(imp,name)
library(forcats)
library(tidyverse)
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='rownames(imp)','impt'='Overall') %>%
mutate(varname = fct_reorder(varname, impt, .desc = F))
ggplot(imp,aes(varname,impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.2,position = 'dodge')+coord_flip()
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
name <- as.data.frame(rownames(imp))
imp <- cbind(imp,name)
library(forcats)
library(tidyverse)
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='rownames(imp)','impt'='Overall') #%>%
#mutate(varname = fct_reorder(varname,impt))
ggplot(imp,aes(x=reorder(varname,impt),impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.2,position = 'dodge')+
coord_flip()
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
name <- as.data.frame(rownames(imp))
imp <- cbind(imp,name)
library(forcats)
library(tidyverse)
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='rownames(imp)','impt'='Overall') #%>%
#mutate(varname = fct_reorder(varname,impt))
ggplot(imp,aes(x=reorder(varname,impt),impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.2,position = 'dodge')+
coord_flip()+
xlab('重要性')+
ylab('变量名')
ggplot(imp,aes(x=reorder(varname,impt),impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.2,position = 'dodge')+
coord_flip()+
xlab('重要性')+
ylab('变量名')+
theme(axis.text.x=element_text(angle=60,vjust=1,hjust=1))
ggplot(imp,aes(x=reorder(varname,impt),impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.2,position = 'dodge')+
coord_flip()+
xlab('重要性')+
ylab('变量名')+
theme(axis.text.x=element_text(vjust=1,hjust=0.2))
ggplot(imp,aes(x=reorder(varname,impt),impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.2,position = 'dodge')+
coord_flip()+
xlab('重要性')+
ylab('变量名')+
theme(axis.text.x=element_text(vjust=0.05,hjust=0.2))
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
name <- as.data.frame(rownames(imp))
imp <- cbind(imp,name)
library(forcats)
library(tidyverse)
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='rownames(imp)','impt'='Overall') #%>%
#mutate(varname = fct_reorder(varname,impt))
ggplot(imp,aes(x=reorder(varname,impt),impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.1,position = 'dodge')+
coord_flip()+
xlab('重要性')+
ylab('变量名')
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
name <- as.data.frame(rownames(imp))
imp <- cbind(imp,name)
library(forcats)
library(tidyverse)
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='rownames(imp)','impt'='Overall') #%>%
#mutate(varname = fct_reorder(varname,impt))
ggplot(imp,aes(reorder(varname,impt),impt,color=impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.1,position = 'dodge')+
coord_flip()+
xlab('重要性')+
ylab('变量名')
ggplot(imp,aes(reorder(varname,impt),impt,color=impt)) +
geom_bar(stat = 'identity',fill = 'steelblue',width = 0.1,position = 'dodge')+
coord_flip()+
xlab('重要性')+
ylab('变量名')
ggplot(imp,aes(reorder(varname,impt),impt,color=impt,fill=impt)) +
geom_bar(stat = 'identity',width = 0.1,position = 'dodge')+
coord_flip()+
xlab('重要性')+
ylab('变量名')
ggplot(imp,aes(reorder(varname,impt),impt,color=impt,fill=impt)) +
geom_bar(stat = 'identity',width = 0.1,position = 'dodge')+
coord_flip()+
xlab('重要性')+
ylab('变量名')
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
name <- as.data.frame(rownames(imp))
imp <- cbind(imp,name)
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='rownames(imp)','impt'='Overall') #%>%
#mutate(varname = fct_reorder(varname,impt))
ggplot(imp,aes(reorder(varname,impt),impt,color=impt,fill=impt)) +
geom_bar(stat = 'identity',width = 0.1,position = 'dodge')+
coord_flip()+
xlab('重要性')+
ylab('变量名')
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
imp$name <- as.data.frame(rownames(imp))
imp
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
imp$name <- as.data.frame(rownames(imp))
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='rownames(imp)','impt'='Overall') #%>%
imp
imp$name
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
imp$name <- as.data.frame(rownames(imp))
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='name','impt'='Overall') #%>%
#mutate(varname = fct_reorder(varname,impt))
ggplot(imp,aes(reorder(varname,impt),impt,color=impt,fill=impt)) +
geom_bar(stat = 'identity',width = 0.1,position = 'dodge')+
coord_flip()+
xlab('重要性')+
ylab('变量名')
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
imp$name <- as.data.frame(rownames(imp))
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='name','impt'='Overall')
imp
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
imp$name <- as.data.frame(rownames(imp))
imp <- imp %>%
filter(Overall>0) %>%
rename('varname'='rownames(imp)','impt'='Overall') #%>%
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
imp$name <- rownames(imp)
imp
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
imp$name <- rownames(imp)
imp <- imp %>%
filter(Overall>0) %>%
rename('impt'='Overall') #%>%
#mutate(varname = fct_reorder(varname,impt))
ggplot(imp,aes(reorder(name,impt),impt,color=impt,fill=impt)) +
geom_bar(stat = 'identity',width = 0.1,position = 'dodge')+
coord_flip()+
xlab('重要性')+
ylab('变量名')
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
#imp$name <-
imp <- imp %>%
mutate(name=rownames(imp))
filter(Overall>0) %>%
rename('impt'='Overall')
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
#imp$name <-
imp <- imp %>%
mutate(name=rownames(imp)) %>%
filter(Overall>0) %>%
rename('impt'='Overall')
imp
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
blogdown:::stop_server()
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions
=TRUE)
rpartFit <- train(medv ~ .,
data = BostonHousing,
method = "rpart",
trControl = repeatedcv)
rpartFit
importance <- varImp(rpartFit, scale = F)
imp <- as.data.frame(importance[["importance"]])
imp <- imp %>%
mutate(name=rownames(imp)) %>%
filter(Overall>0) %>%
rename('impt'='Overall') #%>%
#mutate(varname = fct_reorder(varname,impt))
ggplot(imp,aes(reorder(name,impt),impt,color=impt,fill=impt)) +
geom_bar(stat = 'identity',width = 0.1,position = 'dodge')+
coord_flip()+
xlab('重要性')+
ylab('变量名')
ggplot(imp,aes(reorder(name,impt),impt,color=impt,fill=impt)) +
geom_bar(stat = 'identity',width = 0.1)+
coord_flip()+
xlab('重要性')+
ylab('变量名')
pokemon$test_pred <- as.ordered(pokemon$test_pred)
pokemon <- read_csv("E:/R_codes/others/Pokemon.csv")
colnames(pokemon)[1] <- 'id' #修改变量名
colnames(pokemon)[3] <- 'Type1'
colnames(pokemon)[4] <- 'Type2'
pokemon$Legendary <- as.factor(pokemon$Legendary)
pokemon <- na.omit(pokemon)
pokemon <- pokemon %>%
drop_na(Type1,Type2,Total,HP,Defense,Attack,Speed,Generation) %>%
select(Legendary,Type1,Type2,Total,HP,Defense,Attack,Speed,Generation)
sampled <- sample(1:nrow(pokemon),nrow(pokemon)*0.7,replace=F)
trainpok <- pokemon[sampled,]
testpok <- pokemon[-sampled,]
trctrl <- trainControl(method = "repeatedcv", number =10,repeats =10, savePredictions
=T)
set.seed(3333)
knn_fit <- train(Legendary ~ Type1 + Type2 + Total+ HP + Defense+ Attack + Speed + Generation, data = pokemon, method = "knn",
trControl=trctrl,
tuneLength = 10)
knn_fit
kacc <- as.data.frame(knn_fit[["results"]])
kacc <- kacc[,1:2]
ggplot(kacc,aes(k,Accuracy)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks=seq(5,26,1))
pokemon <- pokemon %>%
mutate(test_pred=predict(knn_fit,newdata=pokemon))
confusionMatrix(pokemon$test_pred,pokemon$Legendary)
pokemon$test_pred <- as.ordered(pokemon$test_pred)
pokemon$Legendary <- as.ordered(pokemon$Legendary)
roc(pokemon$test_pred,pokemon$Legendary,plot=T, print.auc=T, auc.polygon=T, max.auc.polygon=T,auc.polygon.col="skyblue", print.thres=T,xlab ='伪正类率',ylab='真正类率')
ccw <- roc(pokemon$test_pred,pokemon$Legendary,plot=T, print.auc=T, auc.polygon=T, max.auc.polygon=T,auc.polygon.col="skyblue", print.thres=T,xlab ='伪正类率',ylab='真正类率')
ggroc(ccw)
