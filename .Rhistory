x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
par(mar = c(4, 4, 0.1, 0.1))
plot(x, y)
abline(lm(y ~ x), col = "red")
plot(x, y, pch = 20, col = z)
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
par(mar = c(4, 4, 0.1, 0.1))
plot(x, y)
abline(lm(y ~ z), col = "red")
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
par(mar = c(4, 4, 0.1, 0.1))
plot(x, y)
abline(lm(y ~ z), col = "red")
plot(x, y, pch = 20, col = z)
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
par(mar = c(4, 4, 0.1, 0.1))
plot(x, y)
abline(lm(x ~ z), col = "red")
plot(x, y, pch = 20, col = z)
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
par(mar = c(4, 4, 0.1, 0.1))
plot(x, y)
abline(lm(x ~ z), col = "red")
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
par(mar = c(4, 4, 0.1, 0.1))
plot(x, y)
abline(lm(z ~ x), col = "red")
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
par(mar = c(4, 4, 0.1, 0.1))
plot(x, y)
abline(lm(z ~ y), col = "red")
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
par(mar = c(4, 4, 0.1, 0.1))
plot(x, y)
abline(lm(y ~ z), col = "red")
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
par(mar = c(4, 4, 0.1, 0.1))
plot(x, y)
abline(lm(x ~ z), col = "red")
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
par(mar = c(4, 4, 0.1, 0.1))
plot(x, y)
abline(lm(x ~ y), col = "red")
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
par(mar = c(4, 4, 0.1, 0.1))
plot(x, y)
abline(lm(y ~ x), col = "red")
plot(x, y, pch = 20, col = z)
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
par(mar = c(4, 4, 0.1, 0.1))
plot(x, y)
abline(lm(y ~ x), col = "red")
lm(y ~ z)
lm(y ~ x)
?lm
residuals(lm(y ~ z))
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
par(mar = c(4, 4, 0.1, 0.1))
plot(x, y)
abline(lm(y ~ x), col = "red")
lm(y ~ z)
res <- residuals(lm(y ~ z))
abline(lm(res ~ x), col = "red")
lm(y ~ z)
res <- residuals(lm(y ~ z))
abline(lm(res ~ x), col = "red")
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
par(mar = c(4, 4, 0.1, 0.1))
plot(x, y)
abline(lm(y ~ x), col = "red")
lm(y ~ z)
res <- residuals(lm(y ~ z))
abline(lm(res ~ x), col = "red")
plot(x, res)
abline(lm(res ~ x), col = "red")
plot(x, y)
abline(lm(res ~ x), col = "red")
abline(lm(res ~ x), col = "red")
abline(lm(res ~ x), col = z)
abline(lm(res ~ x), group = z)
lm(res ~ x)
cc <- data.frame(x,y,z)
View(cc)
ggplot(moto, aes(x, y)) +
geom_point(aes(color = z))
library(ggplot2)
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
moto <- data.frame(x,y,z)
ggplot(moto)
ggplot(moto, aes(x, y)) +
geom_point(aes(color = z))
library(ggplot2)
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
z <- as.factor(z)
moto <- data.frame(x,y,z)
ggplot(moto)
ggplot(moto, aes(x, y)) +
geom_point(aes(color = z))
ggplot(moto, aes(x, y)) +
geom_line(lm)
ggplot(moto, aes(x, y)) +
geom_line(lm(y~x))
ggplot(moto, aes(x, y)) +
geom_line(lm(y ~ x))
ggplot(moto, aes(x, y)) +
geom_smooth(method='lm')
ggplot(moto, aes(x, y)) +
geom_point(aes(color = z)) +
geom_smooth(method='lm')
lm1 <- lm(y ~ z,moto)
res <- residuals(lm1)
ggplot(moto, aes(x,res)) +
geom_point(aes(color = z))
ggplot(moto, aes(x,res)) +
geom_smooth(method='lm')
ggplot(moto, aes(x,res)) +
geom_point(aes(color = z)) +
geom_smooth(method='lm')
ggplot(moto, aes(x,res)) +
geom_point(aes(color = z)) +
geom_smooth(method='lm',group=z)
ggplot(moto, aes(x,res)) +
geom_point(aes(color = z)) +
geom_smooth(method='lm')
ggplot(moto, aes(x,res),group=z) +
geom_point(aes(color = z)) +
geom_smooth(method='lm')
ggplot(moto, aes(x,res),group=z) +
geom_point(aes(color = z)) +
geom_line()
res <- residuals(lm1)
ggplot(moto, aes(x,res),group=z) +
geom_point(aes(color = z))
ggplot(moto, aes(x,res),group=z) +
geom_point(aes(color = z))
ggplot(subset(moto,z==1), aes(x,res),group=z)
+
geom_smooth(method='lm')
ggplot(subset(moto,z==1), aes(x,res),group=z)+
geom_smooth(method='lm')
moto <- subset(moto,z==1)
library(ggplot2)
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
z <- as.factor(z)
moto <- data.frame(x,y,z)
moto1 <- subset(moto,z==1)
ggplot(moto1, aes(x,res),group=z)+
geom_smooth(method='lm')
ggplot(moto1, aes(x,res))+
geom_smooth(method='lm')
View(moto1)
lm1 <- lm(y ~ z,moto)
res <- residuals(lm1)
ggplot(moto1, aes(x,res))+
geom_smooth(method='lm')
moto <- within(moto,res <- residuals(lm1))
View(cc)
View(moto)
moto1 <- subset(moto,z==1)
ggplot(moto1, aes(x,res))+
geom_smooth(method='lm')
geom_smooth(moto1, aes(x,res),method='lm')
ggplot(moto, aes(x,res),group=z)+
geom_smooth(moto1, aes(x,res),method='lm')
ggplot(moto, aes(x,res),group=z)+
geom_smooth(moto1,method='lm')
ggplot(moto, aes(x,res),group=z)+
geom_smooth(moto1,method='lm')
ggplot(moto, aes(x,res),group=z)
ggplot(moto, aes(x,res),group=z)+
geom_point(aes(color = z)) +
geom_smooth(moto1,method='lm')
ggplot(moto, aes(x,res),group=z)+
geom_point(aes(color = z)) +
geom_smooth(data = moto1,method='lm')
ggplot(moto, aes(x, y)) +
geom_point(aes(color = z))
ggplot(moto, aes(x, y)) +
geom_point(aes(color = z)) +
geom_smooth(method='lm')
ggplot(moto, aes(x,res),group=z)+
geom_point(aes(color = z)) +
geom_smooth(data = moto1,method='lm')+
geom_smooth(data = moto2,method='lm')
moto1 <- subset(moto,z==1)
moto2 <- subset(moto,z==2)
moto3 <- subset(moto,z==3)
moto4 <- subset(moto,z==4)
moto5 <- subset(moto,z==5)
ggplot(moto, aes(x,res),group=z)+
geom_point(aes(color = z)) +
geom_smooth(data = moto1,method='lm')+
geom_smooth(data = moto2,method='lm')
ggplot(moto, aes(x,res),group=z)+
geom_point(aes(color = z)) +
geom_smooth(data = moto1,method='lm')+
geom_smooth(data = moto2,method='lm')+
geom_smooth(data = moto3,method='lm')+
geom_smooth(data = moto4,method='lm')+
geom_smooth(data = moto5,method='lm')
ggplot(moto, aes(x,res),group=z)+
geom_point(aes(color = z)) +
geom_smooth(data = moto1,method='lm',se=F)+
geom_smooth(data = moto2,method='lm',se=F)+
geom_smooth(data = moto3,method='lm',se=F)+
geom_smooth(data = moto4,method='lm',se=F)+
geom_smooth(data = moto5,method='lm',se=F)
ggplot(moto, aes(x,res),group=z)+
geom_point(aes(color = z)) +
geom_smooth(data = moto1,method='lm',se=F,color = z)+
geom_smooth(data = moto2,method='lm',se=F)+
geom_smooth(data = moto3,method='lm',se=F)+
geom_smooth(data = moto4,method='lm',se=F)+
geom_smooth(data = moto5,method='lm',se=F)
ggplot(moto, aes(x,res),group=z)+
geom_point(aes(color = z)) +
geom_smooth(data = moto1,method='lm',se=F)+
geom_smooth(data = moto2,method='lm',se=F)+
geom_smooth(data = moto3,method='lm',se=F)+
geom_smooth(data = moto4,method='lm',se=F)+
geom_smooth(data = moto5,method='lm',se=F)
ggplot(moto, aes(x,res),group=z) +
geom_point(aes(color = z))
ggplot(moto, aes(x,y),group=z)+
geom_point(aes(color = z)) +
geom_smooth(data = moto1,method='lm',se=F)+
geom_smooth(data = moto2,method='lm',se=F)+
geom_smooth(data = moto3,method='lm',se=F)+
geom_smooth(data = moto4,method='lm',se=F)+
geom_smooth(data = moto5,method='lm',se=F)
ggplot(moto, aes(x, y)) +
geom_point(aes(color = z)) +
geom_smooth(method='lm')
ggplot(moto, aes(x, y)) +
geom_point(aes(color = z)) +
geom_smooth(method='lm',se=F)
ggplot(moto, aes(x,y),group=z)+
geom_point(aes(color = z)) +
geom_smooth(data = moto1,method='lm',se=F)+
geom_smooth(data = moto2,method='lm',se=F)+
geom_smooth(data = moto3,method='lm',se=F)+
geom_smooth(data = moto4,method='lm',se=F)+
geom_smooth(data = moto5,method='lm',se=F)
library(ggplot2)
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
z <- as.factor(z)
moto <- data.frame(x,y,z)
lm1 <- lm(y ~ z,moto)
moto <- within(moto,res <- residuals(lm1))
moto1 <- subset(moto,z==1)
moto2 <- subset(moto,z==2)
moto3 <- subset(moto,z==3)
moto4 <- subset(moto,z==4)
moto5 <- subset(moto,z==5)
#ggplot(moto)
ggplot(moto, aes(x, y)) +
geom_point(aes(color = z))
ggplot(moto, aes(x, y)) +
geom_point(aes(color = z)) +
geom_smooth(method='lm',se=F)
ggplot(moto, aes(x,y),group=z)+
geom_point(aes(color = z)) +
geom_smooth(data = moto1,method='lm',se=F)+
geom_smooth(data = moto2,method='lm',se=F)+
geom_smooth(data = moto3,method='lm',se=F)+
geom_smooth(data = moto4,method='lm',se=F)+
geom_smooth(data = moto5,method='lm',se=F)
library(ggplot2)
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
z <- as.factor(z)
moto <- data.frame(x,y,z)
lm1 <- lm(y ~ z,moto)
moto <- within(moto,res <- residuals(lm1))
moto1 <- subset(moto,z==1)
moto2 <- subset(moto,z==2)
moto3 <- subset(moto,z==3)
moto4 <- subset(moto,z==4)
moto5 <- subset(moto,z==5)
ggplot(moto, aes(x, y)) +
geom_point(aes(color = z)) +
geom_smooth(method='lm',se=F)
library(ggplot2)
set.seed(711)
x = seq(0, 4, length = 100)
y = -x + jitter(rep(1:5, each = 20), 2)
z = rep(1:5, each = 20)
z <- as.factor(z)
moto <- data.frame(x,y,z)
lm1 <- lm(y ~ z,moto)
moto <- within(moto,res <- residuals(lm1))
moto1 <- subset(moto,z==1)
moto2 <- subset(moto,z==2)
moto3 <- subset(moto,z==3)
moto4 <- subset(moto,z==4)
moto5 <- subset(moto,z==5)
ggplot(moto, aes(x, y)) +
geom_point(aes(color = z)) +
geom_smooth(method='lm',se=F)
ggplot(moto, aes(x,y),group=z)+
geom_point(aes(color = z)) +
geom_smooth(data = moto1,method='lm',se=F)+
geom_smooth(data = moto2,method='lm',se=F)+
geom_smooth(data = moto3,method='lm',se=F)+
geom_smooth(data = moto4,method='lm',se=F)+
geom_smooth(data = moto5,method='lm',se=F)
setwd("E:/edu/data2")
library(haven)
library(tidyverse)
library(rpart)
library(rpart.plot)
library(lattice)
require(stats)
library(ggplot2)
library(pROC)
library(randomForest)
ceps <- read_dta("E:/edu/data2/ceps.dta")
ceps <- lapply(ceps, unclass)
ceps <- data.frame(ceps)
ceps$schids <- as.factor(ceps$schids)
attach(ceps)
histogram(sdtotal,equal.widths = TRUE, nint = 70, xlab = "标准化总成绩",type = "density",ylab = '密度')
setwd("E:/edu/data2")
library(haven)
library(tidyverse)
library(rpart)
library(rpart.plot)
library(lattice)
require(stats)
library(ggplot2)
library(pROC)
library(randomForest)
ceps <- read_dta("E:/edu/data2/ceps.dta")
ceps <- lapply(ceps, unclass)
ceps <- data.frame(ceps)
ceps$schids <- as.factor(ceps$schids)
attach(ceps)
histogram(sdtotal,equal.widths = TRUE, nint = 70, xlab = "标准化总成绩",type = "density",ylab = '密度')
setwd("E:/edu/data2")
ceps <- read_dta("E:/edu/data2/ceps.dta")
#抽出30所学校，作成绩箱线图
ceps1 <- ceps %>%
group_by(schids) %>%
summarize(mathmean = mean(tr_mat, na.rm = T))
set.seed(2019)
sample <- sample(1:nrow(ceps1),30,replace = F)#随机抽取30个学校
ceps1 <- ceps1[sample,]
ceps1 <- ceps1$schids #提取抽中学校编号的向量
delte <- subset(ceps,schids == ceps1[1])
#遍历抽中的学校id，纵向合并数据框
for (i in ceps1) delte <- rbind(delte, subset(ceps,schids == i))
#箱线图
delte$schids <- as.factor(delte$schids)
ggplot(delte, aes(schids,tr_mat)) +
geom_boxplot(size=0.1,outlier.fill='blue') +
xlab('学校代码') + ylab('数学原始成绩')
ceps <- lapply(ceps, unclass)
ceps <- data.frame(ceps)
setwd("E:/edu/data2")
ceps <- read_dta("E:/edu/data2/ceps.dta")
#抽出30所学校，作成绩箱线图
ceps1 <- ceps %>%
group_by(schids) %>%
summarize(mathmean = mean(tr_mat, na.rm = T))
set.seed(2019)
sample <- sample(1:nrow(ceps1),30,replace = F)#随机抽取30个学校
ceps1 <- ceps1[sample,]
ceps1 <- ceps1$schids #提取抽中学校编号的向量
delte <- subset(ceps,schids == ceps1[1])
#遍历抽中的学校id，纵向合并数据框
for (i in ceps1) delte <- rbind(delte, subset(ceps,schids == i))
#箱线图
delte$schids <- as.factor(delte$schids)
ggplot(delte, aes(schids,tr_mat)) +
geom_boxplot(size=0.1,outlier.fill='blue') +
xlab('学校代码') + ylab('数学原始成绩')
ceps <- lapply(ceps, unclass)
ceps <- data.frame(ceps)
setwd("E:/edu/data2")
ceps <- read_dta("E:/edu/data2/ceps.dta")
#抽出30所学校，作成绩箱线图
ceps1 <- ceps %>%
group_by(schids) %>%
summarize(mathmean = mean(tr_mat, na.rm = T))
set.seed(2019)
sample <- sample(1:nrow(ceps1),30,replace = F)#随机抽取30个学校
ceps1 <- ceps1[sample,]
ceps1 <- ceps1$schids #提取抽中学校编号的向量
delte <- subset(ceps,schids == ceps1[1])
#遍历抽中的学校id，纵向合并数据框
for (i in ceps1) delte <- rbind(delte, subset(ceps,schids == i))
#箱线图
delte$schids <- as.factor(delte$schids)
ggplot(delte, aes(schids,tr_mat)) +
geom_boxplot(size=0.1,outlier.colour = ='blue') +
setwd("E:/edu/data2")
ceps <- read_dta("E:/edu/data2/ceps.dta")
#抽出30所学校，作成绩箱线图
ceps1 <- ceps %>%
group_by(schids) %>%
summarize(mathmean = mean(tr_mat, na.rm = T))
set.seed(2019)
sample <- sample(1:nrow(ceps1),30,replace = F)#随机抽取30个学校
ceps1 <- ceps1[sample,]
ceps1 <- ceps1$schids #提取抽中学校编号的向量
delte <- subset(ceps,schids == ceps1[1])
#遍历抽中的学校id，纵向合并数据框
for (i in ceps1) delte <- rbind(delte, subset(ceps,schids == i))
#箱线图
delte$schids <- as.factor(delte$schids)
ggplot(delte, aes(schids,tr_mat)) +
geom_boxplot(size=0.1,outlier.colour = 'blue') +
xlab('学校代码') + ylab('数学原始成绩')
ceps <- lapply(ceps, unclass)
ceps <- data.frame(ceps)
setwd("E:/edu/data2")
ceps <- read_dta("E:/edu/data2/ceps.dta")
#抽出30所学校，作成绩箱线图
ceps1 <- ceps %>%
group_by(schids) %>%
summarize(mathmean = mean(tr_mat, na.rm = T))
set.seed(2019)
sample <- sample(1:nrow(ceps1),30,replace = F)#随机抽取30个学校
ceps1 <- ceps1[sample,]
ceps1 <- ceps1$schids #提取抽中学校编号的向量
delte <- subset(ceps,schids == ceps1[1])
#遍历抽中的学校id，纵向合并数据框
for (i in ceps1) delte <- rbind(delte, subset(ceps,schids == i))
#箱线图
delte$schids <- as.factor(delte$schids)
ggplot(delte, aes(schids,tr_mat)) +
geom_boxplot(size=0.1,outlier.colour =  "#56B4E9") +
xlab('学校代码') + ylab('数学原始成绩')
ceps <- lapply(ceps, unclass)
ceps <- data.frame(ceps)
setwd("E:/edu/data2")
ceps <- read_dta("E:/edu/data2/ceps.dta")
#抽出30所学校，作成绩箱线图
ceps1 <- ceps %>%
group_by(schids) %>%
summarize(mathmean = mean(tr_mat, na.rm = T))
set.seed(2018)
sample <- sample(1:nrow(ceps1),30,replace = F)#随机抽取30个学校
ceps1 <- ceps1[sample,]
ceps1 <- ceps1$schids #提取抽中学校编号的向量
delte <- subset(ceps,schids == ceps1[1])
#遍历抽中的学校id，纵向合并数据框
for (i in ceps1) delte <- rbind(delte, subset(ceps,schids == i))
#箱线图
delte$schids <- as.factor(delte$schids)
ggplot(delte, aes(schids,tr_mat)) +
geom_boxplot(size=0.1,outlier.colour =  "#56B4E9") +
xlab('学校代码') + ylab('数学原始成绩')
ceps <- lapply(ceps, unclass)
ceps <- data.frame(ceps)
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
