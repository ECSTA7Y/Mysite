cltree3$variable.importance #各个变量的重要性程度
rpart.plot(cltree3)
test <- na.omit(test) #删除缺失值
y.pr <- predict(cltree3,test,type="prob") #预测测试集概率
pr <- y.pr[,2]
test <- cbind(test,pr)
modelroc <- roc(test$matgreat,test$pr)
auc(modelroc) #计算AUC值
plot(modelroc,xlab ='伪正类率',ylab='真正类率') #ROC 曲线
test$yhat <- ifelse(test$pr >0.5,'1','0') #大于0.5设置为"是"
attach(test)
tab <- table(yhat,matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值") #矩阵小标题
tab #混淆矩阵，行为测试集预测值，列为测试集观测值
treeerror #测试集错误率
ceps <- within(ceps,{
predc <- predict(rpartFit)
})
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
ceps <- within(ceps,{
predc <- predict(rpartFit)
})
tab <- table(ceps$predc,ceps$matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值")
tab
treeerror
plot(rpartFit)
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
#10次10折交叉验证
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
ceps <- within(ceps,{
predc <- predict(rpartFit)
})
#混淆矩阵
tab <- table(ceps$predc,ceps$matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值")
tab
#错误率
ggplot(ceps, aes(d = predc, m = matgreat)) + geom_roc()
install.packages('plotROC')
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
#10次10折交叉验证
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
ceps <- within(ceps,{
predc <- predict(rpartFit)
})
#混淆矩阵
tab <- table(ceps$predc,ceps$matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值")
tab
modelroc <- roc(ceps$matgreat,ceps$predc)
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
#10次10折交叉验证
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
ceps <- within(ceps,{
predc <- predict(rpartFit)
pr <- predict(rpartFit,type="prob")
})
#混淆矩阵
tab <- table(ceps$predc,ceps$matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值")
tab
modelroc <- roc(ceps$matgreat,ceps$pr)
cont <- rpart.control(minsplit=5,maxcompete=100,xval=10,maxdepth=30,cp=0.014) #设置参数
cltree3 <- rpart(matgreat ~  schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok +  drink +  teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro ,
data = subset(train,grade9 == 1),weights = sweight,method = "class",parms = list(split="gini"),control=cont,na.action = na.omit) #决策树
#knitr::kable(printcp(cltree3),caption="复杂度参数表",digits =4)
cltree3$variable.importance #各个变量的重要性程度
rpart.plot(cltree3)
test <- na.omit(test) #删除缺失值
y.pr <- predict(cltree3,test,type="prob") #预测测试集概率
pr <- y.pr[,2]
test <- cbind(test,pr)
modelroc <- roc(test$matgreat,test$pr)
#auc(modelroc) #计算AUC值
#ROC 曲线
plot(modelroc, print.auc=T, auc.polygon=T, max.auc.polygon=TRUE,auc.polygon.col="skyblue", print.thres=TRUE,xlab ='伪正类率',ylab='真正类率')
#plot(modelroc,print.auc=T)
test$yhat <- ifelse(test$pr >0.5,'1','0') #大于0.5设置为"是"
attach(test)
tab <- table(yhat,matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值") #矩阵小标题
tab #混淆矩阵，行为测试集预测值，列为测试集观测值
treeerror #测试集错误率
View(test)
View(ceps)
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
#10次10折交叉验证
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
ceps <- within(ceps,{
predc <- predict(rpartFit)
pr <- predict(rpartFit,type="prob")
})
#混淆矩阵
tab <- table(ceps$predc,ceps$matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值")
tab
modelroc <- roc(ceps$matgreat,ceps$pr.1)
?roc
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
#10次10折交叉验证
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
ceps <- within(ceps,{
predc <- predict(rpartFit)
pr <- predict(rpartFit,type="prob")
})
#混淆矩阵
tab <- table(ceps$predc,ceps$matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值")
tab
modelroc <- roc(ceps$matgreat,ceps$pr.1)
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
#10次10折交叉验证
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
ceps <- within(ceps,{
predc <- predict(rpartFit)
pr <- predict(rpartFit,type="prob")
})
#混淆矩阵
ceps$matgreat <- as.numeric(ceps$matgreat)
tab <- table(ceps$predc,ceps$matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值")
tab
modelroc <- roc(ceps$matgreat,ceps$pr.1)
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
#10次10折交叉验证
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
ceps <- within(ceps,{
predc <- predict(rpartFit)
pr <- predict(rpartFit,type="prob")
})
#混淆矩阵
tab <- table(ceps$predc,ceps$matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值")
tab
ceps$matgreat <- as.factor(ceps$matgreat)
ceps$matgreat <- as.numeric(ceps$pr.1)
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
#10次10折交叉验证
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
ceps <- within(ceps,{
predc <- predict(rpartFit)
pr <- predict(rpartFit,type="prob")
})
#混淆矩阵
tab <- table(ceps$predc,ceps$matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值")
tab
ceps$matgreat <- as.factor(ceps$matgreat)
ceps$pr.1 <- as.numeric(ceps$pr.1)
stop()
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
#10次10折交叉验证
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
#ceps <- within(ceps,{predc <- predict(rpartFit); pr <- predict(rpartFit,type="prob")})
#混淆矩阵
tab <- table(ceps$predc,ceps$matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值")
tab
y.pr <- predict(rpartFit,ceps,type="prob") #预测测试集概率
pr <- y.pr[,2]
test <- cbind(ceps,pr)
modelroc <- roc(ceps$matgreat,ceps$pr)
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
#10次10折交叉验证
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
#ceps <- within(ceps,{predc <- predict(rpartFit); pr <- predict(rpartFit,type="prob")})
#混淆矩阵
tab <- table(ceps$predc,ceps$matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值")
tab
ceps <- na.omit(ceps)
y.pr <- predict(rpartFit,ceps,type="prob") #预测测试集概率
pr <- y.pr[,2]
ceps <- cbind(ceps,pr)
modelroc <- roc(ceps$matgreat,ceps$pr)
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
#10次10折交叉验证
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
#ceps <- within(ceps,{predc <- predict(rpartFit); pr <- predict(rpartFit,type="prob")})
#混淆矩阵
tab <- table(ceps$predc,ceps$matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值")
tab
ceps <- na.omit(ceps)
y.pr <- predict(rpartFit,ceps,type="prob") #预测测试集概率
pr <- y.pr[,2]
ceps <- cbind(ceps,pr)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps$pr <- as.numeric(ceps$pr)
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
#10次10折交叉验证
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
#ceps <- within(ceps,{predc <- predict(rpartFit); pr <- predict(rpartFit,type="prob")})
#混淆矩阵
tab <- table(ceps$predc,ceps$matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值")
tab
ceps <- na.omit(ceps)
y.pr <- predict(rpartFit,ceps,type="prob") #预测测试集概率
pr <- y.pr[,2]
ceps <- cbind(ceps,pr)
ceps$matgreat <- as.factor(ceps$matgreat)
Sys.setlocale('LC_ALL','C')
ceps$pr <- as.numeric(ceps$pr)
ceps$pr <- as.numeric(ceps$pr)
setwd("E:/edu/data2")
library(haven)
library(tidyverse)
library(rpart)
library(rpart.plot)
library(lattice)
require(stats)
library(ggplot2)
library(pROC)
library(randomForest)
ceps <- read_dta("E:/edu/data2/ceps.dta")
ceps <- lapply(ceps, unclass)
ceps <- data.frame(ceps)
ceps$schids <- as.factor(ceps$schids)
attach(ceps)
histogram(sdtotal,equal.widths = TRUE, nint = 70, xlab = "标准化总成绩",type = "density",ylab = '密度')
setwd("E:/edu/data2")
ceps <- read_dta("E:/edu/data2/ceps.dta")
#抽出30所学校，作成绩箱线图
ceps1 <- ceps %>%
group_by(schids) %>%
summarize(mathmean = mean(tr_mat, na.rm = T))
set.seed(2019)
sample <- sample(1:nrow(ceps1),30,replace = F)#随机抽取30个学校
ceps1 <- ceps1[sample,]
ceps1 <- ceps1$schids #提取抽中学校编号的向量
delte <- subset(ceps,schids == ceps1[1])
#遍历抽中的学校id，纵向合并数据框
for (i in ceps1) delte <- rbind(delte, subset(ceps,schids == i))
#箱线图
delte$schids <- as.factor(delte$schids)
ggplot(delte, aes(schids,tr_mat)) +
geom_boxplot(size=0.1) +
xlab('学校代码') + ylab('数学原始成绩')
#ceps1 <- subset(ceps,schids<=30)
ceps <- lapply(ceps, unclass)
ceps <- data.frame(ceps)
cont <- rpart.control(minsplit=5,maxcompete=100,xval=10,maxdepth=30,cp=0.01)
tree <- rpart(sdtotal ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation +  desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm +  comno +  bknum + buget +  eduqua + fight + brkpb + smok +  drink +  teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd +  huko + eduy +  dangy +  houspro ,data = subset(ceps,grade9 == 1),weights = sweight,method = "anova",parms = list(split="gini"),control=cont,na.action = na.omit)
set.seed(1212323) #设置随机数种子
sampled <- sample(1:nrow(ceps),nrow(ceps)*0.3,replace=FALSE) #抽取30%样本作为验证集
test <- ceps[sampled,] #测试集
train <- ceps[-sampled,] #训练集
cont <- rpart.control(minsplit=5,maxcompete=100,xval=10,maxdepth=30,cp=0.01) #设置参数
cltree3 <- rpart(matgreat ~  schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno +  bknum + buget + eduqua + fight + brkpb + smok +  drink +  teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd +  huko + eduy +  dangy +  houspro ,
data = subset(train,grade9 == 1),weights = sweight,method = "class",parms = list(split="gini"),control=cont,na.action = na.omit,model=T) #决策树
#knitr::kable(printcp(cltree3),caption="复杂度参数表",digits =4)
rpart.plot(cltree3)
test <- na.omit(test) #删除缺失值
y.pr <- predict(cltree3,test,type="prob") #预测测试集概率
pr <- y.pr[,2]
test <- cbind(test,pr)
modelroc <- roc(test$matgreat,test$pr)
#ROC 曲线
plot(modelroc, print.auc=T, auc.polygon=T, max.auc.polygon=TRUE,auc.polygon.col="skyblue", print.thres=TRUE,xlab ='伪正类率',ylab='真正类率')
test$yhat <- ifelse(test$pr >0.5,'1','0') #大于0.5设置为"是"
attach(test)
tab <- table(yhat,matgreat)
names(dimnames(tab))<-c("预测值","真实值")
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
tab
treeerror #测试集错误率
cont <- rpart.control(minsplit=5,maxcompete=100,xval=10,maxdepth=30,cp=0.014) #设置参数
cltree3 <- rpart(matgreat ~  schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok +  drink +  teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro ,
data = subset(train,grade9 == 1),weights = sweight,method = "class",parms = list(split="gini"),control=cont,na.action = na.omit) #决策树
#knitr::kable(printcp(cltree3),caption="复杂度参数表",digits =4)
cltree3$variable.importance #各个变量的重要性程度
rpart.plot(cltree3)
test <- na.omit(test) #删除缺失值
y.pr <- predict(cltree3,test,type="prob") #预测测试集概率
pr <- y.pr[,2]
test <- cbind(test,pr)
modelroc <- roc(test$matgreat,test$pr)
#auc(modelroc) #计算AUC值
#ROC 曲线
plot(modelroc, print.auc=T, auc.polygon=T, max.auc.polygon=TRUE,auc.polygon.col="skyblue", print.thres=TRUE,xlab ='伪正类率',ylab='真正类率')
#plot(modelroc,print.auc=T)
test$yhat <- ifelse(test$pr >0.5,'1','0') #大于0.5设置为"是"
attach(test)
tab <- table(yhat,matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值") #矩阵小标题
tab #混淆矩阵，行为测试集预测值，列为测试集观测值
treeerror #测试集错误率
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
#10次10折交叉验证
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
#ceps <- within(ceps,{predc <- predict(rpartFit); pr <- predict(rpartFit,type="prob")})
#混淆矩阵
tab <- table(ceps$predc,ceps$matgreat)
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
#10次10折交叉验证
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
ceps <- within(ceps,{predc <- predict(rpartFit); pr <- predict(rpartFit,type="prob")})
#混淆矩阵
tab <- table(ceps$predc,ceps$matgreat)
treeerror <- (sum(tab)-sum(diag(tab)))/sum(tab)
names(dimnames(tab))<-c("预测值","真实值")
tab
ceps <- na.omit(ceps)
y.pr <- predict(rpartFit,ceps,type="prob") #预测测试集概率
pr <- y.pr[,2]
pr <- as.numeric(pr)
ceps <- cbind(ceps,pr)
modelroc <- roc(ceps$matgreat,ceps$pr)
modelroc <- roc(ceps$matgreat,ceps$pr)
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
#10次10折交叉验证
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
ceps <- na.omit(ceps)
y.pr <- predict(rpartFit,ceps,type="prob") #预测测试集概率
pr <- y.pr[,2]
pr <- as.numeric(pr)
ceps <- cbind(ceps,pr)
modelroc <- roc(ceps$matgreat,ceps$pr)
class(ceps$pr)
library(caret)
#install.packages('e1071')
library(e1071)
ceps$matgreat <- as.factor(ceps$matgreat)
ceps <- na.omit(ceps)
#10次10折交叉验证
repeatedcv <-trainControl(method ="repeatedcv", number =10,repeats =10, savePredictions=TRUE)
rpartFit <- train(matgreat ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok + drink + teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro  ,
data = ceps,
method = "rpart",
trControl = repeatedcv)
rpartFit
test <- na.omit(ceps) #删除缺失值
y.pr <- predict(rpartFit,ceps,type="prob") #预测测试集概率
pr <- y.pr[,2]
ceps <- cbind(ceps,pr)
modelroc <- roc(ceps$matgreat,ceps$pr)
cont <- rpart.control(minsplit=5,maxcompete=100,xval=10,maxdepth=30,cp=0.014) #设置参数
cltree3 <- rpart(matgreat ~  schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation + desk + net + dialect + chkhmwk + chkcouse + classtm +  clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm + comno + bknum + buget + eduqua + fight + brkpb + smok +  drink +  teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd + huko + eduy + dangy +  houspro ,
data = subset(train,grade9 == 1),weights = sweight,method = "class",parms = list(split="gini"),control=cont,na.action = na.omit) #决策树
#knitr::kable(printcp(cltree3),caption="复杂度参数表",digits =4)
cltree3$variable.importance #各个变量的重要性程度
rpart.plot(cltree3)
test <- na.omit(test) #删除缺失值
y.pr <- predict(cltree3,test,type="prob") #预测测试集概率
pr <- y.pr[,2]
test <- cbind(test,pr)
modelroc <- roc(test$matgreat,test$pr)
