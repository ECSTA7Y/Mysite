#nrow和ncol中的一个被明确给出，则R会计算相应的另一个，从而使得矩阵中的数值与输入的值数目相匹配
x <- array(1:20, dim=c(4,5))
x
h <- c(1:24)
Z <- array(h, dim=c(3,4,2)) #创建3X4X2的数组
Z
Z[,,2]#索引
vec <- as.vector(Z)
vec
# 数组命名
vector1 <- c(5,9,3)
vector2 <- c(10,11,12,13,14,15)
column.names <- c("COL1","COL2","COL3")
row.names <- c("ROW1","ROW2","ROW3")
matrix.names <- c("Matrix1","Matrix2")
result <- array(c(vector1,vector2),dim = c(3,3,2),dimnames = list(row.names,column.names,
matrix.names))
result
result[,,'Matrix2'] #索引
pp <- c("Peter", "Piper", "picked", "a", "peck", "of", "pickled", "peppers")
for(i in seq_along(pp)) print(pp[i])
stocks <- tibble(
year = c(2015, NA, 2015, 2015, NA, 2016, 2016),
qtr = c( 1, 2, NA, NA, 2, NA, 4),
return = c(1.88, 0.44, 0.35, 0.66, 0.92, 0.17, 3.40)
)
knitr::kable(stocks,caption = '数据概要')
stocks %>% mutate(year= ifelse(is.na(qtr)==T,9999,year))
stocks %>% mutate(year= ifelse(is.na(qtr)==T,9999,year))
myData <- data.frame(
nation=rep(c('USA','Japan','Libya'),3),
subregion=rep(c('north','south','middle'),each=3),
Awesomeness=rnorm(9)
)
myData
countryData <- data.frame(
nation=c('USA','Japan','Libya','Belarus'),
NumberOfSquid=c(rpois(4,10))
)
countryData
myData %>% full_join(countryData,copy=T)
myData %>% left_join(countryData,copy=T)
library(plyr)
join(myData, countryData, by='nation', type='left', match='all')
?na_if
stocks <- tibble(
year = c(2015, NA, 2015, 2015, NA, 2016, 2016),
qtr = c( 1, 2, NA, NA, 2, NA, 4),
return = c(1.88, 0.44, 0.35, 0.66, 0.92, 0.17, 3.40)
)
knitr::kable(stocks,caption = '数据概要')
stocks %>% mutate(return=na_if(return,year==2016))
stocks %>% na_if(return,year==2016)
stocks %>% na_if(year==2016)
stocks %>% mutate(return=na_if(year==2016,return))
stocks <- tibble(
year = c(2015, NA, 2015, 2015, NA, 2016, 2016),
qtr = c( 1, 2, NA, NA, 2, NA, 4),
return = c(1.88, 0.44, 0.35, 0.66, 0.92, 0.17, 3.40)
)
knitr::kable(stocks,caption = '数据概要')
stocks %>% mutate(return=na_if(year==2016,return))
starwars %>%
select(name, eye_color) %>%
mutate(eye_color = na_if(eye_color, "unknown"))
starwars %>%
select(name, eye_color) %>%
mutate(eye_color = na_if(name, eye_color=="unknown"))
starwars %>%
select(name, eye_color) %>%
mutate(name = na_if(name , eye_color=="blue"))
stocks %>% mutate(return=na_if(year==2016))
stocks %>% mutate(return=na_if(year==2016,return))
stocks %>% mutate(return=na_if(year,2016))
stocks %>% mutate(year=na_if(year,2016))
stocks %>% mutate(year=na_if(year>2016))
stocks %>% mutate(year=na_if(year,2016))
stocks %>% mutate(year= ifelse(is.na(qtr)==T,9999,year))
stocks %>% mutate(year= ifelse(is.na(qtr)==T,9999,year))
stocks %>% mutate(qtr=if_else(qtr,qtr,qtr,9999))
stocks %>% mutate(year= ifelse(is.na(qtr)==T,9999,year))
stocks %>% mutate(year= ifelse(is.na(qtr)==T,9999,year))
stocks %>% mutate(qtr=if_else(qtr==qtr,qtr,qtr,9999))
stocks %>% mutate(year= ifelse(is.na(qtr)==T,9999,year))
stocks %>% mutate(year= ifelse(is.na(qtr)==T,9999,year))
stocks %>% mutate(year=if_else(qtr==qtr,qtr,qtr,9999))
?replace_na
?replace_with_na_if
update.packages('dplyr')
?replace_na
???replace_na
???replace_na
??replace_na
library(tidyr)
?replace_with_na_all
??replace_with_na_all
??replace_with_na_if
update.packages('tidyr')
library(tidyr)
?replace_with_na_if
??replace_with_na_if
?utils
library(help = "utils")
vignette(, package = "rpart")
browseVignettes(package = "rpart")
install.packages("sqldf")
library(sqldf)
newdf <- sqldf("select * from mtcars where carb=1 order by mpg",
row.names=TRUE)
newdf
library(readr)
NBA_season1718_salary <- read_csv("E:/R_codes/others/nba/NBA_season1718_salary.csv")
View(NBA_season1718_salary)
library(readr)
Seasons_Stats <- read_csv("E:/R_codes/others/nba/Seasons_Stats.csv")
View(Seasons_Stats)
library(sqldf)
library(readr)
salary <- read_csv("E:/R_codes/others/nba/NBA_season1718_salary.csv")
Seasons <- read_csv("E:/R_codes/others/nba/Seasons_Stats.csv")
sqldf(
SELECT Year from Seasons
library(sqldf)
library(readr)
salary <- read_csv("E:/R_codes/others/nba/NBA_season1718_salary.csv")
Seasons <- read_csv("E:/R_codes/others/nba/Seasons_Stats.csv")
sqldf(
SELECT Year from Seasons;
sqldf(
"SELECT Year from Seasons;"
)
library(sqldf)
library(readr)
salary <- read_csv("E:/R_codes/others/nba/NBA_season1718_salary.csv")
Seasons <- read_csv("E:/R_codes/others/nba/Seasons_Stats.csv")
sqldf(
"SELECT Year from Seasons;"
)
View(salary)
View(Seasons)
rm()
library(dplyr)
`%>%` <- magrittr::`%>%`
mar<-c(652,1537,598,242,36,46,38,21,218,327,106,67)
caff.marital<-matrix(mar,nrow=3,byrow=T) #byrow=T通过行来填充
caff.marital
#nrow和ncol中的一个被明确给出，则R会计算相应的另一个，从而使得矩阵中的数值与输入的值数目相匹配
x <- array(1:20, dim=c(4,5))
x
h <- c(1:24)
Z <- array(h, dim=c(3,4,2)) #创建3X4X2的数组
Z
Z[,,2]#索引
vec <- as.vector(Z)
vec
# 数组命名
vector1 <- c(5,9,3)
vector2 <- c(10,11,12,13,14,15)
column.names <- c("COL1","COL2","COL3")
row.names <- c("ROW1","ROW2","ROW3")
matrix.names <- c("Matrix1","Matrix2")
result <- array(c(vector1,vector2),dim = c(3,3,2),dimnames = list(row.names,column.names,
matrix.names))
result
result[,,'Matrix2'] #索引
pp <- c("Peter", "Piper", "picked", "a", "peck", "of", "pickled", "peppers")
for(i in seq_along(pp)) print(pp[i])
stocks <- tibble(
year = c(2015, NA, 2015, 2015, NA, 2016, 2016),
qtr = c( 1, 2, NA, NA, 2, NA, 4),
return = c(1.88, 0.44, 0.35, 0.66, 0.92, 0.17, 3.40)
)
knitr::kable(stocks,caption = '数据概要')
stocks %>% mutate(year= ifelse(is.na(qtr),9999,year))
stocks %>% mutate(year=case_when(
is.na(qtr) ~ 9999,
is.na(qtr)==F ~ year,
))
stocks %>% mutate(year=replace(year,is.na(qtr),9999))
stocks %>% mutate(return=ifelse(year==2016,NA,return))
stocks %>% mutate(return=replace(return,year==2016,NA))
stocks %>% mutate(return=na_if(return,year==2016))
stocks %>% mutate(year=na_if(year,2016))
stocks %>% mutate(return=na_if(year==2016,return))
library(REmap)
origin<-c("上海","苏州","无锡","常州","南京","蚌埠","徐州","郑州","洛阳","西安","宝鸡","天水","兰州","嘉峪关","哈密","鄯善","吐鲁番")
destination<-c("苏州","无锡","常州","南京","蚌埠","徐州","郑州","洛阳","西安","宝鸡","天水","兰州","嘉峪关","哈密","鄯善","吐鲁番","乌鲁木齐")
#将上面这两列数据存储在一个数据框里面
dat <- data.frame(origin,destination)
out <- remap(dat,title = "回家路线",subtitle= "2019.1.24",theme = get_theme("Bright"))
plot(out)
library(sqldf)
library(readr)
salary <- read_csv("E:/R_codes/others/nba/NBA_season1718_salary.csv")
Seasons <- read_csv("E:/R_codes/others/nba/Seasons_Stats.csv")
library(sqldf)
library(readr)
salary <- read_csv("E:/R_codes/others/nba/NBA_season1718_salary.csv")
Seasons <- read_csv("E:/R_codes/others/nba/Seasons_Stats.csv")
View(Seasons)
?head
library(sqldf)
library(readr)
salary <- read_csv("E:/R_codes/others/nba/NBA_season1718_salary.csv")
Seasons <- read_csv("E:/R_codes/others/nba/Seasons_Stats.csv")
Seasons <- Seasons %>%
drop_na()
library(sqldf)
library(readr)
`%>%` <- magrittr::`%>%`
library(dplyr)
salary <- read_csv("E:/R_codes/others/nba/NBA_season1718_salary.csv")
Seasons <- read_csv("E:/R_codes/others/nba/Seasons_Stats.csv")
Seasons <- Seasons %>%
drop_na()
??drop_na()
library(sqldf)
library(readr)
`%>%` <- magrittr::`%>%`
library(tidyr)
salary <- read_csv("E:/R_codes/others/nba/NBA_season1718_salary.csv")
Seasons <- read_csv("E:/R_codes/others/nba/Seasons_Stats.csv")
Seasons <- Seasons %>%
drop_na()
head(sqldf(
"SELECT Player Age from Seasons ORDER BY Age DESC;
"
),n=10)
head(sqldf(
"SELECT Year from Seasons;"
),n=10)
library(sqldf)
library(readr)
`%>%` <- magrittr::`%>%`
library(tidyr)
salary <- read_csv("E:/R_codes/others/nba/NBA_season1718_salary.csv")
Seasons <- read_csv("E:/R_codes/others/nba/Seasons_Stats.csv")
Seasons <- Seasons %>%
drop_na(Age,Player)
sqldf(
"SELECT DISTINCT Player,Age from Seasons;
"
)
ses <- sqldf(
"SELECT DISTINCT Player,Age from Seasons;
"
)
View(ses)
summary(ses$Age)
View(`%>%`)
max(ses$Age)
??glmnet
library(glmnet)
install.packages('glmnet')
library(glmnet)
?glmnet
?foreach
library(sqldf)
library(readr)
`%>%` <- magrittr::`%>%`
library(tidyr)
salary <- read_csv("E:/R_codes/others/nba/NBA_season1718_salary.csv")
Seasons <- read_csv("E:/R_codes/others/nba/Seasons_Stats.csv")
#Seasons <- Seasons %>%
# drop_na(Age,Player)
head(sqldf(
"UPDATE salary SET salary17_18 = salary17_18/1000000 "
),n=10)
View(salary)
head(sqldf(
"UPDATE salary SET salary17_18 = season17_18/1000000"
),n=10)
head(sqldf(
"INSERT INTO salary salary17_18;
UPDATE salary SET salary17_18 = season17_18/1000000"
),n=10)
head(sqldf(
"INSERT INTO salary (salary17_18) ;
UPDATE salary SET salary17_18 = season17_18/1000000"
),n=10)
head(sqldf(
"INSERT INTO salary (salary17_18)
UPDATE salary SET salary17_18 = season17_18/1000000"
),n=10)
head(sqldf(
"INSERT INTO salary (salary17_18) VALUES (None);
UPDATE salary SET salary17_18 = season17_18/1000000"
),n=10)
head(sqldf(
"INSERT INTO salary (salary17_18) VALUES (None);
"
),n=10)
head(sqldf(
"ALTER TABLE salary salary17_18;
"
),n=10)
#UPDATE salary SET salary17_18 = season17_18/1000000
head(sqldf(
"ALTER TABLE salary salary17_18 FLOAT;
"
),n=10)
#UPDATE salary SET salary17_18 = season17_18/1000000
head(sqldf(
"ALTER TABLE salary ADD salary17_18 FLOAT;
"
),n=10)
#UPDATE salary SET salary17_18 = season17_18/1000000
head(sqldf(
"ALTER TABLE salary ADD salary17_18 FLOAT;
UPDATE salary SET salary17_18 = season17_18/1000000
"
),n=10)
#UPDATE salary SET salary17_18 = season17_18/1000000
head(sqldf(
"ALTER TABLE salary ADD salary17_18 FLOAT;
UPDATE salary SET salary17_18 = season17_18/1000000;
SELECT * FROM salary
"
),n=10)
#UPDATE salary SET salary17_18 = season17_18/1000000
head(sqldf(
"ALTER TABLE salary ADD salary17_18 FLOAT;
SELECT * FROM salary;
"
),n=10)
#UPDATE salary SET salary17_18 = season17_18/1000000
head(sqldf(
"ALTER TABLE salary ADD salary17_18 FLOAT
SELECT * FROM salary;
"
),n=10)
#UPDATE salary SET salary17_18 = season17_18/1000000
head(salary <- sqldf(
"ALTER TABLE salary ADD salary17_18 FLOAT;
"
),n=10)
#UPDATE salary SET salary17_18 = season17_18/1000000
#SELECT * FROM salary
#UPDATE salary SET salary17_18 = season17_18/1000000
View(salary)
library(sqldf)
library(readr)
`%>%` <- magrittr::`%>%`
library(tidyr)
salary <- read_csv("E:/R_codes/others/nba/NBA_season1718_salary.csv")
Seasons <- read_csv("E:/R_codes/others/nba/Seasons_Stats.csv")
#Seasons <- Seasons %>%
# drop_na(Age,Player)
salary <- sqldf(
"ALTER TABLE salary ADD salary17_18 FLOAT;
",row.names=T)
#UPDATE salary SET salary17_18 = season17_18/1000000
#SELECT * FROM salary
#UPDATE salary SET salary17_18 = season17_18/1000000
library(sqldf)
library(readr)
`%>%` <- magrittr::`%>%`
library(tidyr)
salary <- read_csv("E:/R_codes/others/nba/NBA_season1718_salary.csv")
Seasons <- read_csv("E:/R_codes/others/nba/Seasons_Stats.csv")
#Seasons <- Seasons %>%
# drop_na(Age,Player)
salary <- sqldf(
"ALTER TABLE salary ADD salary17_18 FLOAT;
",row.names=T)
#UPDATE salary SET salary17_18 = season17_18/1000000
#SELECT * FROM salary
#UPDATE salary SET salary17_18 = season17_18/1000000
library(sqldf)
library(readr)
`%>%` <- magrittr::`%>%`
library(tidyr)
salary <- read_csv("E:/R_codes/others/nba/NBA_season1718_salary.csv")
Seasons <- read_csv("E:/R_codes/others/nba/Seasons_Stats.csv")
#Seasons <- Seasons %>%
# drop_na(Age,Player)
salary <- sqldf(
"ALTER TABLE salary
ADD salary17_18 FLOAT;
",row.names=T)
#UPDATE salary SET salary17_18 = season17_18/1000000
#SELECT * FROM salary
#UPDATE salary SET salary17_18 = season17_18/1000000
salary <- sqldf(
"ALTER TABLE salary ;
ADD salary17_18 FLOAT;
",row.names=T)
#UPDATE salary SET salary17_18 = season17_18/1000000
#SELECT * FROM salary
#UPDATE salary SET salary17_18 = season17_18/1000000
library(sqldf)
library(readr)
`%>%` <- magrittr::`%>%`
library(tidyr)
salary <- read_csv("E:/R_codes/others/nba/NBA_season1718_salary.csv")
Seasons <- read_csv("E:/R_codes/others/nba/Seasons_Stats.csv")
#Seasons <- Seasons %>%
# drop_na(Age,Player)
salary <- sqldf(
"ALTER TABLE salary ;
ADD salary17_18 FLOAT;
",row.names=T)
#UPDATE salary SET salary17_18 = season17_18/1000000
#SELECT * FROM salary
#UPDATE salary SET salary17_18 = season17_18/1000000
sqldf(
"ALTER TABLE salary
ADD salary17_18 FLOAT;
",row.names=T)
#UPDATE salary SET salary17_18 = season17_18/1000000
#SELECT * FROM salary
#UPDATE salary SET salary17_18 = season17_18/1000000
rnorm(100) %>%
matrix(ncol = 2) %>%
plot() %>%
str()
library(dplyr)
`%>%` <- magrittr::`%>%`
rnorm(100) %>%
matrix(ncol = 2) %>%
plot() %>%
str()
rnorm(100) %>%
matrix(ncol = 2) %>%
plot() %T>%
str()
library(magrittr)
rnorm(100) %>%
matrix(ncol = 2) %>%
plot() %T>%
str()
rnorm(100) %>%
+ matrix(ncol = 2) %>%
+ plot() %T>%
+ str()
rnorm(100) %>%
matrix(ncol = 2) %>%
plot() %T>%
str()
library(magrittr)
rnorm(100) %>%
matrix(ncol = 2) %T>%
plot() %>%
str()
rnorm(100) %>%
matrix(ncol = 2) %>%
plot() %>%
str()
rnorm(100) %>%
matrix(ncol = 2) %T>%
plot() %>%
str()
View(`%>%`)
rnorm(100) %>% matrix(ncol = 2)
matrix(rnorm(100),ncol = 2)
?geom_abline
??geom_abline
??data_grid
library(glmnet)
?glmnet
library(haven)
library(ggplot2)
library(dplyr)
library(rpart)
library(rpart.plot)
library(pROC)
library(tidyr)
library(randomForest)
library(missForest)
`%>%` <- magrittr::`%>%`
library(mice)
library(readr)
ceps <- read_csv("C:/Users/xsong/Desktop/table/ceps.imputed.csv")
ceps <- ceps %>%
select(sdtotal,everything()) %>%
na.omit()
#options(na.action="na.fail")
library(glmnet)
x_train <- model.matrix(sdtotal ~ schids + sex + onechi +  maedu +  faedu + drunk + qurel + relation +  desk + net + dialect + chkhmwk + chkcouse + classtm + clpre + revitm + subject + know + drsmok + commhr + schtype + schcsrm +  comno +  bknum + buget + eduqua + fight + brkpb + smok +  drink +  teainc + money + clfee + qianzi + lifetm +  dial +  chidia +  futcfd +  huko + eduy +  dangy + houspro,ceps)[,-1]
y_train <- ceps %>%
select(sdtotal) %>%
unlist() %>%
as.numeric()
lasso_mod <-  glmnet(x_train,
y_train,
alpha = 1)
plot(lasso_mod,xvar="lambda",label=F,ylab='系数')
lasso_mod
coef(lasso_mod)
cof <- coef(lasso_mod)
View(cof)
cof@p
coef(lasso_mod,s=0.1)
coef(lasso_mod,s=1)
coef(lasso_mod,s=0.001)
?coef
?cv.glmnet
cvfit <- cv.glmnet(x_train,
y_train,
alpha = 1)
cvfit
plot(cvfit)
cvfit$lambda.min
cvfit$lambda.1se
#options(na.action="na.fail")
library(glmnet)
?glmnet
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
setwd('F:\\Mysite\\Mysite')
blogdown:::serve_site()
blogdown:::stop_server()
